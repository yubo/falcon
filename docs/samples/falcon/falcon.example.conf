root	"/opt/falcon";

// 配置顺序决定了启动顺序，模块之间的依赖关系会限制启动顺序
// 可以设置本地的环境变量
// TRANSFER_ADDR = "8080";
// TRANSFER_ADDR = "0.0.0.0:8080";
FALCON_DSN	= falcon:1234@tcp(localhost:3306)/falcon?loc=Local&parseTime=true;
INDEX_DSN	= falcon:1234@tcp(localhost:3306)/idx?loc=Local&parseTime=true;
ALARM_DSN	= falcon:1234@tcp(localhost:3306)/alarm?loc=Local&parseTime=true;
AGENT_ADDR	= unix:run/agent.sock;
TRANSFER_ADDR	= unix:run/transfer.sock;
SERVICE_ADDR	= unix:run/service.sock;
ALARM_ADDR	= unix:run/alarm.sock;
EMU_TPL_DIR	= "var/emu_tpl";
TSDB_DIR	= "var/tsdb";
DB_SCHEMA	= "scripts/db_schema/03_falcon.sql";

AGENT_HTTP_ADDR		= ":18001";
TRANSFER_HTTP_ADDR	= ":18002";
SERVICE_HTTP_ADDR	= ":18003";
ALARM_HTTP_ADDR		= ":18004";
CTRL_HTTP_ADDR		= ":18005";

pidFile	"run/falcon.pid";
//log	"log" 4;
log	"stdout" 4;

ctrl	{
//	disabled;
	masterMode	true;	//default:	true;
	miMode		false;	//default:	false;
	devMode		true;	//default:	false;
	beegoDevMode	false;	//default:	false;
	debug		1;
	admin		test,service-ocean@misso;
	dsn		${FALCON_DSN}; //falcon:1234@tcp(localhost:3306)/falcon?loc=Local&parseTime=true;

	idxDsn		${INDEX_DSN};
	alarmDsn	${ALARM_DSN};
	etcdendpoints	${FALCON_ETCD};
	transferAddr	${TRANSFER_ADDR};
	callTimeout	5000;
	leasekey	"/open-falcon/ctrl/online/test.dev";
	leasettl	20;
	dbMaxIdle	30;
	dbMaxConn	30;
	dbSchema	${DB_SCHEMA};
	HttpAddr	${CTRL_HTTP_ADDR};
	EnableDocs	true;
	AuthModule	ldap,misso,github,google;
	CacheModule	"host,role,system,tag,user";
	LdapAddr	localhost:389;
	LdapBaseDn	dc=xiaomi,dc=com;
	LdapBindDn	cn=admin,dc=xiaomi,dc=com;
	LdapBindPwd	123456;
	LdapFilter	"(&(objectClass=posixAccount)(cn=%s))";
	PluginAlarm	true;
	miNornsUrl	http://norns.dev/api/v1/tagstring/cop.xiaomi/hostinfos;
	miNornsInterval	5;

//	rlLimit			10;
//	rlAccuracy		5;
//	rlGcTimeout		60000;
//	rlGcInterval		1000;
//	SessionGcMaxLifeTime	86400;
//	SessionCookieLifeTime	86400;

//	oAuth
	MissoRedirectURL	http://auth.dev.pt.xiaomi.com/v1.0/auth/callback/misso;
	GithubClientID		"0c6eb7247bb4bc7ca16a";
	GithubClientSecret	"7c75c029907af4f398a0e6338fcf9680c1138f64";
	GithubRedirectURL	http://auth.dev.pt.xiaomi.com/v1.0/auth/callback/github;
	GoogleClientID		"781171109477-10tu51e8bs1s677na46oct6hdefpntpu.apps.googleusercontent.com";
	GoogleClientSecret	xpEoBFqkmI3KVN9pHt2VW-eN;
	GoogleRedirectURL	http://auth.dev.pt.xiaomi.com/v1.0/auth/callback/google;
};

service	{
	debug;
	leasekey	"/open-falcon/service/online/test.falcon";
	leasettl	20;
	apiAddr		${SERVICE_ADDR};
	httpAddr	${SERVICE_HTTP_ADDR};
	alarmAddr	${ALARM_ADDR};	// for client
	dsn		${FALCON_DSN};
	idxDsn		${INDEX_DSN};
	dbMaxIdle	4;
	dbMaxConn	4;
	callTimeout	5000;		// 请求超时时间
	confInterval	30;		// 同步配置间隔时间
	judgeInterval	10;		// 事件触发器扫描间隔时间
	shardNum	10;
	shardIds	"0,1,2,3,4,5,6,7,8,9";
	cacheTimeout	24*3600;
	rrdTimeout	31*24*3600;
	tsdbBucketNum	13;
	tsdbBucketSize	2*3600;		// time (second)
	//tsdbTimeout	26*3600;	// tsdbBucketNum * tsdbBucketSize
	tsdbDir		${TSDB_DIR};
};

transfer {
	debug;
	leasekey	"/open-falcon/transfer/online/test.falcon";
	leasettl	20;
	apiAddr		${TRANSFER_ADDR};
	httpAddr	${TRANSFER_HTTP_ADDR};
	workerProcesses	2;	// upstream 的并发连接数
	burstSize	16;	// client put burst size to remote service
	callTimeout	5000;	// 请求超时时间
	shardNum	10;
	shardMap {	// 后端服务
		0 ${SERVICE_ADDR};
		1 ${SERVICE_ADDR};
		2 ${SERVICE_ADDR};
		3 ${SERVICE_ADDR};
		4 ${SERVICE_ADDR};
		5 ${SERVICE_ADDR};
		6 ${SERVICE_ADDR};
		7 ${SERVICE_ADDR};
		8 ${SERVICE_ADDR};
		9 ${SERVICE_ADDR};
	};
};

agent	{
	debug;
	burstSize	16;	// client put burst size to remote service
	leasekey	"/open-falcon/agent/online/test.falcon";
	leasettl	20;
	host		localhost;
	interval	5;
	apiAddr		${AGENT_ADDR};
	httpAddr	${AGENT_HTTP_ADDR};
	ifacePrefix	eth,em;
	workerProcesses	3;
	callTimeout	5000;
//	upstream	stdout;
//	upstream	127.0.0.1:1234,127.0.0.1:1235;
	upstream	${TRANSFER_ADDR};
	emuTplDir	${EMU_TPL_DIR};
	plugins		"emulator,sys,demo";
};

alarm {
	debug;
	leasekey	"/open-falcon/alarm/online/test.falcon";
	leasettl	20;
	apiAddr		${ALARM_ADDR};
	httpAddr	${ALARM_HTTP_ADDR};
	workerProcesses	2;	// 处理 event 的并发数
	burstSize	16;	// client put burst size to remote service
	callTimeout	5000;	// 请求超时时间
	upstream	stdout;
	dbMaxIdle	4;
	dbMaxConn	4;
	syncdsn		${FALCON_DSN};
	syncInterval	30;
	eventExpireTime	30;
};

