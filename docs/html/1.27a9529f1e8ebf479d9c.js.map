{"version":3,"sources":["webpack:///1.27a9529f1e8ebf479d9c.js","webpack:///./src/routes/falcon/dashboard/components/SearchData.js?7c08","webpack:///./src/routes/falcon/dashboard/modules/index.js?52e6"],"names":["webpackJsonp","402","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_form","_form2","_table","_table2","_dropdown","_dropdown2","_button","_button2","_input","_input2","_icon","_icon2","_select","_select2","_spin","_spin2","_extends2","_extends3","_menu","_menu2","_modal","_modal2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_react","_react2","_reactRedux","_moment","_moment2","_index","FormItem","Item","Option","SearchData","_React$PureComponent","_ref","_temp","_this","_ret","this","_len","arguments","length","args","Array","_key","__proto__","getPrototypeOf","call","apply","concat","state","endpointInputBorderColor","endpoint","tag","counter","searchEndpointsText","searchCountersText","selectedEndpointRowKeys","selectedCounterRowKeys","selectedEndpointRows","selectedCounterRows","endpointsLimit","countersLimit","changeEndpoint","e","endpointText","target","setState","replace","changeTag","changeCounter","onInputEndpointChange","onInputCounterChange","queryEndpoints","_this$state","warning","title","content","type","preventDefault","props","getEndpoints","queryCounters","selectedRows","endpointIds","map","id","join","getCounters","showCharts","singleCounter","undefined","endpoints","counters","endTime","unix","startTime","subtract","saveSearchText","getId","key","_props$dashboard$toJS","dashboard","toJS","searchText","_this2","_props$dashboard$toJS2","isLoading","endpointsColumns","dataIndex","rowEndpointSelection","selections","selectedRowKeys","onChange","onSelectInvert","item","filter","rowCounterSelection","count","countersKeyData","newObj","countersColumns","render","text","record","createElement","onClick","width","menu","formEndpointItemLayout","labelCol","span","wrapperCol","formCounterItemLayout","tailEndpointFormItemLayout","sm","offset","tailCounterFormItemLayout","className","onSubmit","label","placeholder","style","borderColor","htmlType","position","top","suffix","rowKey","rowSelection","columns","dataSource","str","reg","RegExp","match","pagination","size","overlay","PureComponent","mapActionCreators","getCharts","mapStateToProps","connect","946","resetDashboardState","saveSearchData","data","payload","receiveSuccessEndpoints","RECEIVE_SUCCESS_ENDPOINTS","receiveSuccessCounters","RECEIVE_SUCCESS_COUNTERS","receiveSuccessChartsData","RECEIVE_SUCCESS_CHARTSDATA","chartsData","limit","dispatch","_utils","fetch","params","query","then","rsp","catch","ids","consol_fun","totalResCount","responseCount","results","push","sort","forEach","eachCounter","index","end_time","hostnames","start_time","body","sortEndpoints","eachEndpoint","postParams","JSON","stringify","win","window","open","cf","method","graph_type","location","href","getChartParams","path","action","midReducer","_immutable","_immutable2","initialState","fromJS","selectedEndpoints","selectedCounters","start","end","set","merge","949"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAqGA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAlGvFG,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GAGT,IAAIC,GAAQR,EAAoB,IAE5BS,EAASR,EAAuBO,GAEhCE,EAASV,EAAoB,IAE7BW,EAAUV,EAAuBS,GAEjCE,EAAYZ,EAAoB,IAEhCa,EAAaZ,EAAuBW,GAEpCE,EAAUd,EAAoB,IAE9Be,EAAWd,EAAuBa,GAElCE,EAAShB,EAAoB,IAE7BiB,EAAUhB,EAAuBe,GAEjCE,EAAQlB,EAAoB,IAE5BmB,EAASlB,EAAuBiB,GAEhCE,EAAUpB,EAAoB,IAE9BqB,EAAWpB,EAAuBmB,GAElCE,EAAQtB,EAAoB,IAE5BuB,EAAStB,EAAuBqB,GAEhCE,EAAYxB,EAAoB,GAEhCyB,EAAYxB,EAAuBuB,GAEnCE,EAAQ1B,EAAoB,KAE5B2B,EAAS1B,EAAuByB,GAEhCE,EAAS5B,EAAoB,IAE7B6B,EAAU5B,EAAuB2B,GAEjCE,EAAmB9B,EAAoB,GAEvC+B,EAAmB9B,EAAuB6B,GAE1CE,EAAgBhC,EAAoB,GAEpCiC,EAAgBhC,EAAuB+B,GAEvCE,EAA8BlC,EAAoB,GAElDmC,EAA8BlC,EAAuBiC,GAErDE,EAAapC,EAAoB,GAEjCqC,EAAapC,EAAuBmC,EAExCpC,GAAoB,IAEpBA,EAAoB,IAEpBA,EAAoB,KAEpBA,EAAoB,IAEpBA,EAAoB,IAEpBA,EAAoB,IAEpBA,EAAoB,IAEpBA,EAAoB,IAEpBA,EAAoB,KAEpBA,EAAoB,GC1FpB,IAAAsC,GAAAtC,EAAA,GD8FIuC,EAAUtC,EAAuBqC,GC7FrCE,EAAAxC,EAAA,IAEAyC,EAAAzC,EAAA,GDiGI0C,EAAWzC,EAAuBwC,GC/FtCE,EAAA3C,EAAA,IAEAA,GAAA,IAEA,IAAM4C,GAAWnC,EAAAL,QAAKyC,KAChBC,EAASzB,EAAAjB,QAAO0C,OAGhBC,EDkGW,SAAUC,GAGzB,QAASD,KACP,GAAIE,GAEAC,EAAOC,EAAOC,GAElB,EAAIrB,EAAiB3B,SAASiD,KAAMN,EAEpC,KAAK,GAAIO,GAAOC,UAAUC,OAAQC,EAAOC,MAAMJ,GAAOK,EAAO,EAAGA,EAAOL,EAAMK,IAC3EF,EAAKE,GAAQJ,UAAUI,EAGzB,OAAeT,GAASC,GAAQ,EAAIhB,EAA4B/B,SAASiD,MAAOJ,EAAOF,EAAWa,WAAavD,OAAOwD,eAAed,IAAae,KAAKC,MAAMd,GAAOI,MAAMW,OAAOP,KAAiBN,EC/GpMc,OACEC,yBAA0B,UAC1BC,SAAU,GACVC,IAAK,GACLC,QAAS,GACTC,oBAAqB,GACrBC,mBAAoB,GACpBC,2BACAC,0BACAC,wBACAC,uBACAC,eAAgB,KAChBC,cAAe,MDgHZ1B,ECtGL2B,eAAiB,SAACC,GAChB,GAAMC,GAAeD,EAAEE,OAAO1E,KAC9B4C,GAAK+B,UAAUf,SAAUa,IAGN,IAFPA,EAAaG,QAAQ,OAAQ,IAEjC3B,OACNL,EAAK+B,UAAUhB,yBAA0B,QAEzCf,EAAK+B,UAAUhB,yBAA0B,aDwGxCf,ECpGLiC,UAAY,SAACL,GACX5B,EAAK+B,UAAUd,IAAKW,EAAEE,OAAO1E,SDqG1B4C,EClGLkC,cAAgB,SAACN,GACf5B,EAAK+B,UAAUb,QAASU,EAAEE,OAAO1E,SDmG9B4C,EChGLmC,sBAAwB,SAACP,GACvB5B,EAAK+B,UAAWZ,oBAAqBS,EAAEE,OAAO1E,MAAOiE,2BAA6BE,2BDiG/EvB,EC9FLoC,qBAAuB,SAACR,GACtB5B,EAAK+B,UAAWX,mBAAoBQ,EAAEE,OAAO1E,MAAOkE,0BAA4BE,0BD+F7ExB,EC5FLqC,eAAiB,SAACT,GAAM,GAAAU,GACItC,EAAKc,MAAvBE,EADcsB,EACdtB,SAAUC,EADIqB,EACJrB,GAClB,IAAuC,KAAlCD,EAASgB,QAAQ,QAAS,KACD,KAA7Bf,EAAIe,QAAQ,QAAS,IAKpB,MAJAtD,GAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,wBAEJ,CAGTzC,GAAK+B,UAAWV,2BAA6BE,0BAC9B,WAAXK,EAAEc,MACJd,EAAEe,iBACF3C,EAAK4C,MAAMC,aAAa,eAAgB7B,EAAUC,EAAKjB,EAAKc,MAAMW,kBAElEzB,EAAK+B,UAAUN,eAAgBG,IAC/B5B,EAAK4C,MAAMC,aAAa,eAAgB7B,EAAUC,EAAKW,KDgGtD5B,EC5FL8C,cAAgB,SAAClB,GACf,GAAMmB,GAAe/C,EAAKc,MAAMS,oBAChC,IAA4B,IAAxBwB,EAAa1C,OAKf,MAJA3B,GAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,sBAEJ,CAGTzC,GAAK+B,UAAWT,0BAA4BE,wBAC5C,IAAMwB,GAAcD,EAAaE,IAAI,SAAAlG,GAAA,MAAOA,GAAImG,KAAIC,OAC5CjC,EAAYlB,EAAKc,MAAjBI,OAEO,YAAXU,EAAEc,MACJd,EAAEe,iBACF3C,EAAK4C,MAAMQ,YAAYJ,EAAa9B,EAASlB,EAAKc,MAAMY,iBAExD1B,EAAK+B,UAAUL,cAAeE,IAC9B5B,EAAK4C,MAAMQ,YAAYJ,EAAa9B,EAASU,KDiG5C5B,EC7FLqD,WAAa,SAACb,EAAOc,GAEnB,GAAM/B,GAAuBvB,EAAKc,MAAMS,qBAClCC,EAAsBxB,EAAKc,MAAMU,mBAEvC,IAAoC,IAAhCD,EAAqBlB,YAAmCkD,KAAlBD,GAA8D,IAA/B9B,EAAoBnB,OAK3F,MAJA3B,GAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,gCAEJ,CAET,IAAMe,GAAYjC,EAAqB0B,IAAI,SAAAlG,GAAA,MAAOA,GAAIiE,WAChDyC,MAA8BF,KAAlBD,EAClB9B,EAAoByB,IAAI,SAAAlG,GAAA,MAAOA,GAAImE,WAAYoC,GACzCI,GAAU,EAAAnE,EAAAtC,WAAS0G,OACnBC,GAAY,EAAArE,EAAAtC,WAAS4G,SAAS,EAAG,QAAQF,MAE/C3D,GAAK4C,MAAMkB,gBACT9C,SAAUhB,EAAKc,MAAME,SACrBC,IAAKjB,EAAKc,MAAMG,IAChBC,QAASlB,EAAKc,MAAMI,QACpBK,qBAAsBvB,EAAKc,MAAMS,qBACjCC,oBAAqBxB,EAAKc,MAAMU,sBAGlCxB,EAAK4C,MAAMmB,MAAMP,EAAWC,EAAUjB,EAAOoB,EAAWF,EAASJ,IDT1DrD,EA0GJF,GAAQ,EAAIf,EAA4B/B,SAAS+C,EAAOC,GAib7D,OAxiBA,EAAIf,EAAWjC,SAAS2C,EAAYC,IA0HpC,EAAIf,EAAc7B,SAAS2C,IACzBoE,IAAK,oBACL5G,MAAO,WChNW,GAAA6G,GACK/D,KAAK0C,MAAMsB,UAAUC,OAApCC,EADUH,EACVG,WACApD,EAAsEoD,EAAtEpD,SAAUC,EAA4DmD,EAA5DnD,IAAKC,EAAuDkD,EAAvDlD,QAASK,EAA8C6C,EAA9C7C,qBAAsBC,EAAwB4C,EAAxB5C,oBAChDH,EAA0D,IAAhCE,EAAqBlB,UAAoBkB,EAAqB0B,IAAI,SAAAlG,GAAA,MAAOA,GAAImG,KACvG5B,EAAwD,IAA/BE,EAAoBnB,UAAoBmB,EAAoByB,IAAI,SAAAlG,GAAA,MAAOA,GAAIiH,KAC1G9D,MAAK6B,UAAUf,WAAUC,MAAKC,UAASK,uBAAsBC,sBAAqBH,0BAAyBC,8BD8N3G0C,IAAK,SACL5G,MAAO,WCvHC,GAAAiH,GAAAnE,KAAAoE,EACmCpE,KAAK0C,MAAMsB,UAAUC,OAAxDX,EADAc,EACAd,UAAWC,EADXa,EACWb,SAAUc,EADrBD,EACqBC,UACvBC,IACJhC,MAAO,YACPiC,UAAW,WACXT,IAAK,OAEDU,GACJC,YAAY,EACZC,gBAAiB1E,KAAKY,MAAMO,wBAC5BwD,SAAU,SAACD,EAAiB7B,GAC1BsB,EAAKtC,UAAUV,wBAAyBuD,EAAiBrD,qBAAsBwB,KAEjF+B,eAAgB,SAAA/B,GACd,GAAIxB,GAAuBwB,CACC,KAAxBA,EAAa1C,SACfkB,EAAuBwB,EAAaE,IAAI,SAAA8B,GACtC,MAAOvB,GAAUwB,OAAO,SAAAjI,GAAA,MAAOA,GAAImG,KAAO6B,IAAM,MAGpDV,EAAKtC,UAAWR,uBAAsBF,wBAAyB0B,MAG7DkC,GACJN,YAAY,EACZC,gBAAiB1E,KAAKY,MAAMQ,uBAC5BuD,SAAU,SAACD,EAAiB7B,GAC1BsB,EAAKtC,UAAUT,uBAAwBsD,EAAiBpD,oBAAqBuB,KAE/E+B,eAAgB,SAAA/B,GACd,GAAIvB,GAAsBuB,CACE,KAAxBA,EAAa1C,SACfmB,EAAsBuB,EAAaE,IAAI,SAAA8B,GACrC,MAAOtB,GAASuB,OAAO,SAAAjI,GAAA,MAAOA,GAAIiH,MAAQe,IAAM,MAGpDV,EAAKtC,UAAWP,sBAAqBF,uBAAwByB,MAG7DmC,EAAQ,EACNC,EAAkB1B,EAASR,IAAI,SAAAlG,GACnC,GAAMqI,GAASrI,CAGf,OAFAmI,IAAS,EACTE,EAAOpB,IAAMkB,EACNE,IAEHC,IACJ7C,MAAO,WACPiC,UAAW,UACXT,IAAK,MACLsB,OAAQ,SAACC,EAAMC,GAAP,MAAkBpG,GAAAnC,QAAAwI,cAAA,KAAGC,QAAS,iBAAMrB,GAAKhB,WAAW,WAAYmC,EAAOtE,WAAWqE,MAE1F/C,MAAO,KACPiC,UAAW,OACXkB,MAAO,KAEPnD,MAAO,KACPiC,UAAW,OACXkB,MAAO,KAEHC,EACJxG,EAAAnC,QAAAwI,cAAAjH,EAAAvB,QAAA,KACEmC,EAAAnC,QAAAwI,cAAAjH,EAAAvB,QAAMyC,KAAN,KACEN,EAAAnC,QAAAwI,cAAA7H,EAAAX,SAAQyF,KAAK,SAASgD,QAAS,iBAAMrB,GAAKhB,WAAW,cAArD,eAEFjE,EAAAnC,QAAAwI,cAAAjH,EAAAvB,QAAMyC,KAAN,KACEN,EAAAnC,QAAAwI,cAAA7H,EAAAX,SAAQyF,KAAK,SAASgD,QAAS,iBAAMrB,GAAKhB,WAAW,aAArD,cAEFjE,EAAAnC,QAAAwI,cAAAjH,EAAAvB,QAAMyC,KAAN,KACEN,EAAAnC,QAAAwI,cAAA7H,EAAAX,SAAQyF,KAAK,SAASgD,QAAS,iBAAMrB,GAAKhB,WAAW,QAArD,UAIAwC,GACJC,UAAYC,KAAM,GAClBC,YAAcD,KAAM,KAEhBE,GACJH,UAAYC,KAAM,GAClBC,YAAcD,KAAM,KAEhBG,GACJF,YACEG,IACEJ,KAAM,GACNK,OAAQ,KAIRC,GACJL,YACEG,IACEJ,KAAM,GACNK,OAAQ,IAId,OACEhH,GAAAnC,QAAAwI,cAAA,OAAKvC,GAAG,uBACN9D,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,aACblH,EAAAnC,QAAAwI,cAAAnI,EAAAL,SAAMsJ,SAAUrG,KAAKmC,gBACnBjD,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,WACblH,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,UACblH,EAAAnC,QAAAwI,cAAA,QAAMa,UAAU,OAAhB,KACAlH,EAAAnC,QAAAwI,cAAA,QAAMa,UAAU,SAAhB,gBAEFlH,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,MACblH,EAAAnC,QAAAwI,cAAA,WACErG,EAAAnC,QAAAwI,cAAChG,GAAD,EAAAnB,EAAArB,YAAc4I,GAAwBW,MAAM,aAC1CpH,EAAAnC,QAAAwI,cAAA3H,EAAAb,SACEiG,GAAG,uBACHuD,YAAY,iBACZ5B,SAAU3E,KAAKyB,eACfvE,MAAO8C,KAAKY,MAAME,SAClB0F,OAAQC,YAAazG,KAAKY,MAAMC,6BAEpC3B,EAAAnC,QAAAwI,cAAChG,GAAD,EAAAnB,EAAArB,YAAc4I,GAAwBW,MAAM,OAC1CpH,EAAAnC,QAAAwI,cAAA3H,EAAAb,SACEiG,GAAG,kBACHuD,YAAY,sBACZrJ,MAAO8C,KAAKY,MAAMG,IAClB4D,SAAU3E,KAAK+B,aAGnB7C,EAAAnC,QAAAwI,cAAChG,EAAayG,EACZ9G,EAAAnC,QAAAwI,cAAA7H,EAAAX,SAAQyF,KAAK,UAAUkE,SAAS,UAAhC,WAKgB,IAArBpD,EAAUnD,OACRjB,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,QAAf,OAGAlH,EAAAnC,QAAAwI,cAAA,WACCrG,EAAAnC,QAAAwI,cAAA,OAAKvC,GAAG,gBACN9D,EAAAnC,QAAAwI,cAAChG,EAAD,KACEL,EAAAnC,QAAAwI,cAAAvH,EAAAjB,SAAQG,MAAO8C,KAAKY,MAAMW,eAAgBiF,OAASf,MAAO,GAAIkB,SAAU,WAAYC,KAAM,GAAKjC,SAAU3E,KAAKmC,gBAC5GjD,EAAAnC,QAAAwI,cAAC9F,GAAOvC,MAAM,MAAd,WACAgC,EAAAnC,QAAAwI,cAAC9F,GAAOvC,MAAM,OAAd,YACAgC,EAAAnC,QAAAwI,cAAC9F,GAAOvC,MAAM,OAAd,cAGJgC,EAAAnC,QAAAwI,cAAChG,GAAS6G,UAAU,SAClBlH,EAAAnC,QAAAwI,cAAA3H,EAAAb,SACEyJ,OAASf,MAAO,KAChBc,YAAY,UACZM,OAAQ3H,EAAAnC,QAAAwI,cAAAzH,EAAAf,SAAMyF,KAAK,WACnBtF,MAAO8C,KAAKY,MAAMK,oBAClB0D,SAAU3E,KAAKiC,0BAIrB/C,EAAAnC,QAAAwI,cAAA,OAAKvC,GAAG,qBACN9D,EAAAnC,QAAAwI,cAAAjI,EAAAP,SACEqJ,UAAU,cACVU,OAAQ,SAAAxB,GAAA,MAAUA,GAAOtC,IACzB+D,aAAcvC,EACdwC,QAAS1C,EACT2C,WACE3D,EAAUwB,OAAO,SAAAD,GACf,GAAMqC,GAAM/C,EAAKvD,MAAMK,mBACvB,KACE,GAAMkG,GAAM,GAAIC,QAAOF,EAAK,KAC5B,OAAOrC,GAAK/D,SAASuG,MAAMF,GAC3B,MAAMzF,GACN,OAAO,KAIb4F,YAAY,SASX,IAAdjD,EAAkBnF,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,gCAA+BlH,EAAAnC,QAAAwI,cAAArH,EAAAnB,SAAMwK,KAAK,WAAmB,GAC/FrI,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,YACblH,EAAAnC,QAAAwI,cAAA,KAAGa,UAAU,UACXlH,EAAAnC,QAAAwI,cAAA,QAAMa,UAAU,OAAhB,KACAlH,EAAAnC,QAAAwI,cAAA,QAAMa,UAAU,SAAhB,eAEFlH,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,MACblH,EAAAnC,QAAAwI,cAAAnI,EAAAL,SAAMsJ,SAAUrG,KAAK4C,eACnB1D,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,WACblH,EAAAnC,QAAAwI,cAAA,WACErG,EAAAnC,QAAAwI,cAAChG,GAAD,EAAAnB,EAAArB,YAAcgJ,GAAuBO,MAAM,YACzCpH,EAAAnC,QAAAwI,cAAA3H,EAAAb,SACEiG,GAAG,sBACHuD,YAAY,iBACZrJ,MAAO8C,KAAKY,MAAMI,QAClB2D,SAAU3E,KAAKgC,iBAGnB9C,EAAAnC,QAAAwI,cAAChG,EAAa4G,EACZjH,EAAAnC,QAAAwI,cAAA7H,EAAAX,SAAQyF,KAAK,UAAUkE,SAAS,UAAhC,WAMW,IAApBnD,EAASpD,OACPjB,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,QAAf,OAGAlH,EAAAnC,QAAAwI,cAAA,OAAKvC,GAAG,oBACP9D,EAAAnC,QAAAwI,cAAAnI,EAAAL,QAAA,KACEmC,EAAAnC,QAAAwI,cAAA,OAAKa,UAAU,SACblH,EAAAnC,QAAAwI,cAAChG,EAAD,KACEL,EAAAnC,QAAAwI,cAAAvH,EAAAjB,SAAQG,MAAO8C,KAAKY,MAAMY,cAAegF,OAASf,MAAO,IAAMd,SAAU3E,KAAK4C,eAC5E1D,EAAAnC,QAAAwI,cAAC9F,GAAOvC,MAAM,MAAd,WACAgC,EAAAnC,QAAAwI,cAAC9F,GAAOvC,MAAM,OAAd,YACAgC,EAAAnC,QAAAwI,cAAC9F,GAAOvC,MAAM,OAAd,cAGJgC,EAAAnC,QAAAwI,cAAChG,EAAD,KACEL,EAAAnC,QAAAwI,cAAA3H,EAAAb,SACEyJ,OAASf,MAAO,KAChBc,YAAY,UACZM,OAAQ3H,EAAAnC,QAAAwI,cAAAzH,EAAAf,SAAMyF,KAAK,WACnBtF,MAAO8C,KAAKY,MAAMM,mBAClByD,SAAU3E,KAAKkC,wBAGnBhD,EAAAnC,QAAAwI,cAAChG,GAAS6G,UAAU,SAClBlH,EAAAnC,QAAAwI,cAAA/H,EAAAT,SAAUyK,QAAS9B,GACjBxG,EAAAnC,QAAAwI,cAAA7H,EAAAX,SAAQyF,KAAK,WAAb,SAINtD,EAAAnC,QAAAwI,cAAAjI,EAAAP,SACEqJ,UAAU,cACVW,aAAchC,EACdiC,QAAS7B,EACT8B,WAAYhC,EAAgBH,OAAO,SAAAD,GACjC,GAAMqC,GAAM/C,EAAKvD,MAAMM,mBAAmBY,QAAQ,yBAA0B,QACtEqF,EAAM,GAAIC,QAAOF,EAAK,KAC5B,OAAOrC,GAAK7D,QAAQqG,MAAMF,KAE5BG,YAAY,YD6RrB5H,GC3oBgBR,EAAAnC,QAAM0K,eAyXzBC,GACJ/E,4BACAO,0BACAyE,sBACA/D,gCACAC,eAGI+D,EAAkB,SAAAhH,GAAA,OACtBoD,UAAWpD,EAAMoD,WD0RnBtH,GAAQK,SCvRO,EAAAoC,EAAA0I,SAAQD,EAAiBF,GAAmBhI,ID2RrDoI,IACA,SAAUrL,EAAQC,EAASC,GAEjC,YA6BA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GE5qBhF,QAASkL,KACd,OAASvF,KAAM,yBAGV,QAASwF,GAAeC,GAC7B,OACEzF,KAAM,mBACN0F,QAASD,GAIN,QAASrE,GAAeqE,GAC7B,OACEzF,KAAM,mBACN0B,WAAY+D,GAIhB,QAASE,GAAwBF,GAC/B,OACEzF,KAAM4F,EACNF,SACE5E,UAAW2E,IAKjB,QAASI,GAAuBJ,GAC9B,OACEzF,KAAM8F,EACN/E,SAAU0E,GAId,QAASM,GAAyBN,GAChC,OACEzF,KAAMgG,EACNC,WAAYR,GAIT,QAAStF,GAAaH,EAAM1B,EAAUC,EAAK2H,GAEhD,MAAO,UAACC,GACN,OAAO,EAAAC,EAAAC,OAAMrG,GAAOsG,QAAQ/H,MAAKgI,MAAMjI,EAAU4H,WAC9CM,KAAK,SAACC,GAEL,GADAN,EAASR,EAAwBc,IACd,IAAfA,EAAI9I,OAKN,MAJA3B,GAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,aAEJ,IAGV2G,MAAM,WACL1K,EAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,sBAMZ,QAASW,GAAYiG,EAAKJ,EAAOL,GACtC,MAAO,UAACC,GAGN,MADAA,IAAWnG,KAAM,4BACV,EAAAoG,EAAAC,OAAM,eAAgBC,QAAQC,QAAOL,QAAOS,SAChDH,KAAK,SAACC,GAEL,GADAN,EAASN,EAAuBY,IACb,IAAfA,EAAI9I,OAKN,MAJA3B,GAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,aAEJ,IAGV2G,MAAM,WACLP,GAAWnG,KAAM,0BACjBhE,EAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,qBAMZ,QAASoF,GAAUyB,EAAY9F,EAAWC,EAAUjB,EAAOoB,EAAWF,GAG3E,MAFA6F,GAAgB,EAChBC,EAAgB,EACT,SAACX,GAENA,GAAWnG,KAAM,0BAEjBmG,GAAWnG,KAAM,4BACjB,IAAM+G,KAEN,IAAc,aAAVjH,EAAsB,CACxB+G,EAAgB9F,EAASpD,MAEzB,KADA,GAAIA,GAASkJ,EACNlJ,GACLoJ,EAAQC,MAAOP,SACf9I,GAAU,CAESoD,GAASkG,OACjBC,QAAQ,SAACC,EAAaC,GACjC,GAAMd,IACJM,aACA7F,UAAWoG,GACXE,SAAUrG,EACVsG,UAAWxG,EACXyG,WAAYrG,EAEd6F,GAAQK,GAAOd,OAASA,GACxB,EAAAF,EAAAC,OAAM,aAAcmB,KAAMlB,IACzBE,KAAK,SAACC,GACLM,EAAQK,GAAOX,IAAMA,EACrBN,EAASJ,EAAyBgB,IAClCD,GAAiB,EACbD,IAAkBC,GACpBX,GAAWnG,KAAM,wBAGpB0G,MAAM,WAELI,GAAiB,EACbD,IAAkBC,GACpBX,GAAWnG,KAAM,8BAIlB,IAAc,YAAVF,EAAqB,CAC9B+G,EAAgB/F,EAAUnD,MAE1B,KADA,GAAIA,GAASkJ,EACNlJ,GACLoJ,EAAQC,MAAOP,SACf9I,GAAU,CAEZ,IAAM8J,GAAgB3G,EAAUmG,MAChCQ,GAAcP,QAAQ,SAACQ,EAAcN,GACnC,GAAMd,IACJM,aACA7F,WACAsG,SAAUrG,EACVsG,WAAYI,GACZH,WAAYrG,EAEd6F,GAAQK,GAAOd,OAASA,GACxB,EAAAF,EAAAC,OAAM,aAAcmB,KAAMlB,IACzBE,KAAK,SAACC,GACLM,EAAQK,GAAOX,IAAMA,EACrBN,EAASJ,EAAyBgB,IAClCD,GAAiB,EACbD,IAAkBC,GACpBX,GAAWnG,KAAM,wBAGpB0G,MAAM,WAELI,GAAiB,EACbD,IAAkBC,GACpBX,GAAWnG,KAAM,8BAIlB,CAEL6G,EAAgB,CAChB,IAAMP,IACJM,aACA7F,WACAsG,SAAUrG,EACVsG,UAAWxG,EACXyG,WAAYrG,GAERyG,EAAaC,KAAKC,UAAUvB,EAClCS,GAAQC,MAAOP,OAASH,YACxB,EAAAF,EAAAC,OAAM,YAAasB,GAClBnB,KAAK,SAACC,GACLM,EAAQ,GAAGN,IAAMA,EACjBN,EAASJ,EAAyBgB,IAClCD,GAAiB,EACbD,IAAkBC,GACpBX,GAAWnG,KAAM,wBAGpB0G,MAAM,WAELI,GAAiB,EACbD,IAAkBC,GACpBX,GAAWnG,KAAM,0BAOpB,QAASqB,GAAMP,EAAWC,EAAUjB,EAAOoB,EAAWF,EAASJ,GACpE,MAAO,UAACuF,GACN,GACM2B,IADSF,KAAKC,WAAY/G,YAAWC,aAC/BgH,OAAOC,KAAK,cAAe,YACvC,EAAA5B,EAAAC,OAAM,eAAgBmB,MAAM1G,YAAWC,cAAYyF,KAAK,SAACC,GACvD,GAAMhB,IACJjF,GAAIiG,EAAIjG,GACRM,YACAC,WACAjB,QACAoB,YACAF,UACAiH,GAAI,UACJC,OAAQ,QAEV/B,GAASX,EAAeC,GACxB,IAAI0C,GAAa,GAUjB,IATc,YAAVrI,IACFqI,EAAa,KAED,OAAVrI,IACFqI,EAAa,SAKOtH,KAAlBD,EAA6B,CAC/B,GAAM2F,SAAcE,EAAIjG,GAAlB,eAAmC2H,EAAnC,qBAAkEjH,EAAlE,QAAmFF,CAGzF,OAFA8G,GAAIM,SAASC,KAAb,qBAAyC9B,GAElC,EAET,GAAMA,SAAcE,EAAIjG,GAAlB,sCACNsH,GAAIM,SAASC,KAAb,UAA8B9B,IAG/BG,MAAM,WACL1K,EAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,aAMV,QAASuI,GAAe9H,EAAI2H,EAAYjH,EAAWF,EAAS4F,EAAYsB,GAC7E,MAAO,UAAC/B,IACN,EAAAC,EAAAC,OAAM,eAAgBkC,SAAS/H,IAAOgG,KAAK,SAACC,GAAQ,GAE1C3F,GAAwB2F,EAAxB3F,UAAWC,EAAa0F,EAAb1F,SACfjB,EAAQ,UACO,OAAfqI,IACFrI,EAAQ,WAES,MAAfqI,IACFrI,EAAQ,MAYVqG,EAASX,GATPhF,KACAM,YACAC,WACAjB,QACAoB,YACAF,UACAiH,GAAIrB,EACJsB,YAIF/B,EAAShB,EAAUyB,EAAY9F,EAAWC,EAAUjB,EAAOoB,EAAWF,MAEvE0F,MAAM,WACL1K,EAAAzB,QAAMsF,SACJC,MAAO,KACPC,QAAS,aA8CF,QAASyB,GAAUpD,EAAOoK,GAIvC,MAHoB,0BAAhBA,EAAOxI,OACT5B,MAAQyC,IAEH4H,EAAWrK,EAAOoK,GF+U3BhO,OAAOC,eAAeP,EAAS,cAC7BQ,OAAO,GAGT,IAAIqB,GAAS5B,EAAoB,IAE7B6B,EAAU5B,EAAuB2B,EAErC7B,GE1pBgBqL,sBF2pBhBrL,EEvpBgBsL,iBFwpBhBtL,EEjpBgBkH,iBFkpBhBlH,EEpnBgBiG,eFqnBhBjG,EE9lBgBwG,cF+lBhBxG,EEtkBgBiL,YFukBhBjL,EEzdgBmH,QF0dhBnH,EE7agBoO,iBF8ahBpO,EAAQK,QEnWgBiH,EFqWxBrH,EAAoB,GEpsBpB,IAAAuO,GAAAvO,EAAA,KFwsBIwO,EAAcvO,EAAuBsO,GEvsBzCtC,EAAAjM,EAAA,IAGMyL,EAA4B,4BAC5BE,EAA2B,2BAC3BE,EAA6B,6BAE/Ba,EAAgB,EAChBC,EAAgB,EAQd8B,EAAeD,EAAApO,QAAUsO,QAC7B/H,aACAC,YACAW,YAAcpD,SAAU,GAAIC,IAAK,GAAIC,QAAS,GAAIK,wBAA0BC,wBAC5EgK,qBACAC,oBACAjJ,MAAO,GACPkJ,MAAO,GACPC,IAAK,GACLhB,GAAI,UACJC,OAAQ,QACRjC,cACApE,WAAY,IAyRR4G,EAAa,WAAkC,GAAjCrK,GAAiCV,UAAAC,OAAA,OAAAkD,KAAAnD,UAAA,GAAAA,UAAA,GAAzBkL,EAAcJ,EAAW9K,UAAA,EACnD,QAAQ8K,EAAOxI,MACb,IAAK,4BACH,MAAO5B,GAAM8K,IAAI,YAAaV,EAAO9C,QAAQ5E,UAC/C,KAAK,yBAEL,IAAK,2BACH,MAAO1C,GAAM8K,IAAI,YAAa,EAChC,KAAK,2BACH,MAAO9K,GAAM+K,OACXtH,UAAW,EACXd,SAAUyH,EAAOzH,UAErB,KAAK,wBACH,MAAO3C,GAAM8K,IAAI,YAAa,EAChC,KAAK,mBACH,MAAO9K,GAAM8K,IAAI,aAAcV,EAAO9G,WACxC,KAAK,mBACH,MAAOtD,GAAM+K,OACX3I,GAAIgI,EAAO9C,QAAQlF,GACnBsI,kBAAmBN,EAAO9C,QAAQ5E,UAClCiI,iBAAkBP,EAAO9C,QAAQ3E,SACjCjB,MAAO0I,EAAO9C,QAAQ5F,MACtBkJ,MAAOR,EAAO9C,QAAQxE,UACtB+H,IAAKT,EAAO9C,QAAQ1E,QACpBiH,GAAIO,EAAO9C,QAAQuC,GACnBC,OAAQM,EAAO9C,QAAQwC,QAE3B,KAAK,+BACH,MAAO9J,GAAM8K,IAAI,aAAcV,EAAO9C,QACxC,KAAK,wBACH,MAAOtH,GAAM8K,IAAI,gBACnB,KAAK,6BACH,MAAO9K,GAAM8K,IAAI,aAAcV,EAAOvC,WACxC,KAAK,oBACH,MAAO7H,GAAM8K,IAAI,YAAa,EAChC,SACE,MAAO9K,MFitBPgL,IACA,SAAUnP,EAAQC","file":"1.27a9529f1e8ebf479d9c.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 402:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _form = __webpack_require__(39);\n\nvar _form2 = _interopRequireDefault(_form);\n\nvar _table = __webpack_require__(33);\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _dropdown = __webpack_require__(88);\n\nvar _dropdown2 = _interopRequireDefault(_dropdown);\n\nvar _button = __webpack_require__(18);\n\nvar _button2 = _interopRequireDefault(_button);\n\nvar _input = __webpack_require__(48);\n\nvar _input2 = _interopRequireDefault(_input);\n\nvar _icon = __webpack_require__(23);\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nvar _select = __webpack_require__(41);\n\nvar _select2 = _interopRequireDefault(_select);\n\nvar _spin = __webpack_require__(77);\n\nvar _spin2 = _interopRequireDefault(_spin);\n\nvar _extends2 = __webpack_require__(6);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _menu = __webpack_require__(116);\n\nvar _menu2 = _interopRequireDefault(_menu);\n\nvar _modal = __webpack_require__(21);\n\nvar _modal2 = _interopRequireDefault(_modal);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(7);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(4);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\n__webpack_require__(40);\n\n__webpack_require__(34);\n\n__webpack_require__(115);\n\n__webpack_require__(19);\n\n__webpack_require__(32);\n\n__webpack_require__(89);\n\n__webpack_require__(42);\n\n__webpack_require__(78);\n\n__webpack_require__(174);\n\n__webpack_require__(22);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(12);\n\nvar _moment = __webpack_require__(3);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _index = __webpack_require__(946);\n\n__webpack_require__(949);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar FormItem = _form2.default.Item;\nvar Option = _select2.default.Option;\n\nvar SearchData = function (_React$PureComponent) {\n  (0, _inherits3.default)(SearchData, _React$PureComponent);\n\n  function SearchData() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    (0, _classCallCheck3.default)(this, SearchData);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SearchData.__proto__ || Object.getPrototypeOf(SearchData)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      endpointInputBorderColor: '#d9d9d9',\n      endpoint: '',\n      tag: '',\n      counter: '',\n      searchEndpointsText: '',\n      searchCountersText: '',\n      selectedEndpointRowKeys: [],\n      selectedCounterRowKeys: [],\n      selectedEndpointRows: [],\n      selectedCounterRows: [],\n      endpointsLimit: '50',\n      countersLimit: '50'\n    }, _this.changeEndpoint = function (e) {\n      var endpointText = e.target.value;\n      _this.setState({ endpoint: endpointText });\n      var str = endpointText.replace(/\\s+/g, '');\n      // 除去所有空格后字符串长度为0，说明没有输入\n      if (str.length === 0) {\n        _this.setState({ endpointInputBorderColor: 'red' });\n      } else {\n        _this.setState({ endpointInputBorderColor: '#d9d9d9' });\n      }\n    }, _this.changeTag = function (e) {\n      _this.setState({ tag: e.target.value });\n    }, _this.changeCounter = function (e) {\n      _this.setState({ counter: e.target.value });\n    }, _this.onInputEndpointChange = function (e) {\n      _this.setState({ searchEndpointsText: e.target.value, selectedEndpointRowKeys: [], selectedEndpointRows: [] });\n    }, _this.onInputCounterChange = function (e) {\n      _this.setState({ searchCountersText: e.target.value, selectedCounterRowKeys: [], selectedCounterRows: [] });\n    }, _this.queryEndpoints = function (e) {\n      var _this$state = _this.state,\n          endpoint = _this$state.endpoint,\n          tag = _this$state.tag;\n\n      if (endpoint.replace(/[\\s]/g, '') === '' && tag.replace(/[\\s]/g, '') === '') {\n        _modal2.default.warning({\n          title: '提示',\n          content: '请填写有效Endpoint或者标签！'\n        });\n        return false;\n      }\n      // 去请求数据之前先把目前选中的endpoints重置\n      _this.setState({ selectedEndpointRowKeys: [], selectedEndpointRows: [] });\n      if (e.type === 'submit') {\n        e.preventDefault();\n        _this.props.getEndpoints('getEndpoints', endpoint, tag, _this.state.endpointsLimit);\n      } else {\n        _this.setState({ endpointsLimit: e });\n        _this.props.getEndpoints('getEndpoints', endpoint, tag, e);\n      }\n    }, _this.queryCounters = function (e) {\n      var selectedRows = _this.state.selectedEndpointRows;\n      if (selectedRows.length === 0) {\n        _modal2.default.warning({\n          title: '提示',\n          content: '请勾选要查看的endpoints'\n        });\n        return false;\n      }\n      // 去请求数据之前先把目前选中的counters重置\n      _this.setState({ selectedCounterRowKeys: [], selectedCounterRows: [] });\n      var endpointIds = selectedRows.map(function (obj) {\n        return obj.id;\n      }).join();\n      var counter = _this.state.counter;\n      // 先判断是全局搜索还是切换limit\n\n      if (e.type === 'submit') {\n        e.preventDefault();\n        _this.props.getCounters(endpointIds, counter, _this.state.countersLimit);\n      } else {\n        _this.setState({ countersLimit: e });\n        _this.props.getCounters(endpointIds, counter, e);\n      }\n    }, _this.showCharts = function (title, singleCounter) {\n      // 获取选中的endpoints name和conuters name,把他们转化成两个数组\n      var selectedEndpointRows = _this.state.selectedEndpointRows;\n      var selectedCounterRows = _this.state.selectedCounterRows;\n      // 如果点击画图按钮，判断是否选择了endpoint和counter\n      if (selectedEndpointRows.length === 0 || singleCounter === undefined && selectedCounterRows.length === 0) {\n        _modal2.default.warning({\n          title: '提示',\n          content: '请勾选要查看的endpoints和counters！'\n        });\n        return false;\n      }\n      var endpoints = selectedEndpointRows.map(function (obj) {\n        return obj.endpoint;\n      });\n      var counters = singleCounter === undefined ? selectedCounterRows.map(function (obj) {\n        return obj.counter;\n      }) : [singleCounter];\n      var endTime = (0, _moment2.default)().unix(); // 单位是秒\n      var startTime = (0, _moment2.default)().subtract(1, 'hour').unix();\n      // 把如下数据存入store中以便在其他地方使用\n      _this.props.saveSearchText({\n        endpoint: _this.state.endpoint,\n        tag: _this.state.tag,\n        counter: _this.state.counter,\n        selectedEndpointRows: _this.state.selectedEndpointRows,\n        selectedCounterRows: _this.state.selectedCounterRows\n      });\n      // singleCounter不为undefined时说明点击的查看大图\n      _this.props.getId(endpoints, counters, title, startTime, endTime, singleCounter);\n    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n  }\n\n  (0, _createClass3.default)(SearchData, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props$dashboard$toJS = this.props.dashboard.toJS(),\n          searchText = _props$dashboard$toJS.searchText;\n\n      var endpoint = searchText.endpoint,\n          tag = searchText.tag,\n          counter = searchText.counter,\n          selectedEndpointRows = searchText.selectedEndpointRows,\n          selectedCounterRows = searchText.selectedCounterRows;\n\n      var selectedEndpointRowKeys = selectedEndpointRows.length === 0 ? [] : selectedEndpointRows.map(function (obj) {\n        return obj.id;\n      });\n      var selectedCounterRowKeys = selectedCounterRows.length === 0 ? [] : selectedCounterRows.map(function (obj) {\n        return obj.key;\n      });\n      this.setState({ endpoint: endpoint, tag: tag, counter: counter, selectedEndpointRows: selectedEndpointRows, selectedCounterRows: selectedCounterRows, selectedEndpointRowKeys: selectedEndpointRowKeys, selectedCounterRowKeys: selectedCounterRowKeys });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props$dashboard$toJS2 = this.props.dashboard.toJS(),\n          endpoints = _props$dashboard$toJS2.endpoints,\n          counters = _props$dashboard$toJS2.counters,\n          isLoading = _props$dashboard$toJS2.isLoading;\n\n      var endpointsColumns = [{\n        title: 'Endpoints',\n        dataIndex: 'endpoint',\n        key: 'id'\n      }];\n      var rowEndpointSelection = {\n        selections: true,\n        selectedRowKeys: this.state.selectedEndpointRowKeys,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this2.setState({ selectedEndpointRowKeys: selectedRowKeys, selectedEndpointRows: selectedRows });\n        },\n        onSelectInvert: function onSelectInvert(selectedRows) {\n          var selectedEndpointRows = selectedRows;\n          if (selectedRows.length !== 0) {\n            selectedEndpointRows = selectedRows.map(function (item) {\n              return endpoints.filter(function (obj) {\n                return obj.id === item;\n              })[0];\n            });\n          }\n          _this2.setState({ selectedEndpointRows: selectedEndpointRows, selectedEndpointRowKeys: selectedRows });\n        }\n      };\n      var rowCounterSelection = {\n        selections: true,\n        selectedRowKeys: this.state.selectedCounterRowKeys,\n        onChange: function onChange(selectedRowKeys, selectedRows) {\n          _this2.setState({ selectedCounterRowKeys: selectedRowKeys, selectedCounterRows: selectedRows });\n        },\n        onSelectInvert: function onSelectInvert(selectedRows) {\n          var selectedCounterRows = selectedRows;\n          if (selectedRows.length !== 0) {\n            selectedCounterRows = selectedRows.map(function (item) {\n              return counters.filter(function (obj) {\n                return obj.key === item;\n              })[0];\n            });\n          }\n          _this2.setState({ selectedCounterRows: selectedCounterRows, selectedCounterRowKeys: selectedRows });\n        }\n      };\n      var count = 0;\n      var countersKeyData = counters.map(function (obj) {\n        var newObj = obj;\n        count += 1;\n        newObj.key = count;\n        return newObj;\n      });\n      var countersColumns = [{\n        title: 'Counters',\n        dataIndex: 'counter',\n        key: 'key',\n        render: function render(text, record) {\n          return _react2.default.createElement(\n            'a',\n            { onClick: function onClick() {\n                return _this2.showCharts('Endpoint', record.counter);\n              } },\n            text\n          );\n        }\n      }, {\n        title: '类型',\n        dataIndex: 'type',\n        width: 60\n      }, {\n        title: '频率',\n        dataIndex: 'step',\n        width: 50\n      }];\n      var menu = _react2.default.createElement(\n        _menu2.default,\n        null,\n        _react2.default.createElement(\n          _menu2.default.Item,\n          null,\n          _react2.default.createElement(\n            _button2.default,\n            { type: 'dashed', onClick: function onClick() {\n                return _this2.showCharts('Endpoint');\n              } },\n            'Endpoint\\u89C6\\u89D2'\n          )\n        ),\n        _react2.default.createElement(\n          _menu2.default.Item,\n          null,\n          _react2.default.createElement(\n            _button2.default,\n            { type: 'dashed', onClick: function onClick() {\n                return _this2.showCharts('Counter');\n              } },\n            'Counter\\u89C6\\u89D2'\n          )\n        ),\n        _react2.default.createElement(\n          _menu2.default.Item,\n          null,\n          _react2.default.createElement(\n            _button2.default,\n            { type: 'dashed', onClick: function onClick() {\n                return _this2.showCharts('组合');\n              } },\n            '\\u7EC4\\u5408\\u89C6\\u89D2'\n          )\n        )\n      );\n      var formEndpointItemLayout = {\n        labelCol: { span: 4 },\n        wrapperCol: { span: 19 }\n      };\n      var formCounterItemLayout = {\n        labelCol: { span: 2 },\n        wrapperCol: { span: 21 }\n      };\n      var tailEndpointFormItemLayout = {\n        wrapperCol: {\n          sm: {\n            span: 19,\n            offset: 4\n          }\n        }\n      };\n      var tailCounterFormItemLayout = {\n        wrapperCol: {\n          sm: {\n            span: 21,\n            offset: 2\n          }\n        }\n      };\n      return _react2.default.createElement(\n        'div',\n        { id: 'dashboard-container' },\n        _react2.default.createElement(\n          'div',\n          { className: 'endpoints' },\n          _react2.default.createElement(\n            _form2.default,\n            { onSubmit: this.queryEndpoints },\n            _react2.default.createElement(\n              'div',\n              { className: 'content' },\n              _react2.default.createElement(\n                'div',\n                { className: 'header' },\n                _react2.default.createElement(\n                  'span',\n                  { className: 'num' },\n                  '1'\n                ),\n                _react2.default.createElement(\n                  'span',\n                  { className: 'title' },\n                  '\\u641C\\u7D22Endpoints'\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'up' },\n                _react2.default.createElement(\n                  'div',\n                  null,\n                  _react2.default.createElement(\n                    FormItem,\n                    (0, _extends3.default)({}, formEndpointItemLayout, { label: 'Endpoint' }),\n                    _react2.default.createElement(_input2.default, {\n                      id: 'txtDashBoardEndPoint',\n                      placeholder: '\\u53EF\\u4EE5\\u7528\\u7A7A\\u683C\\u5206\\u5272\\u591A\\u4E2A\\u641C\\u7D22\\u5173\\u952E\\u5B57',\n                      onChange: this.changeEndpoint,\n                      value: this.state.endpoint,\n                      style: { borderColor: this.state.endpointInputBorderColor } })\n                  ),\n                  _react2.default.createElement(\n                    FormItem,\n                    (0, _extends3.default)({}, formEndpointItemLayout, { label: '\\u6807\\u7B7E' }),\n                    _react2.default.createElement(_input2.default, {\n                      id: 'txtDashBoardTag',\n                      placeholder: 'eg:job=appstore-web',\n                      value: this.state.tag,\n                      onChange: this.changeTag\n                    })\n                  ),\n                  _react2.default.createElement(\n                    FormItem,\n                    tailEndpointFormItemLayout,\n                    _react2.default.createElement(\n                      _button2.default,\n                      { type: 'primary', htmlType: 'submit' },\n                      '\\u5168\\u5C40\\u641C\\u7D22'\n                    )\n                  )\n                )\n              ),\n              endpoints.length === 0 ? _react2.default.createElement(\n                'div',\n                { className: 'down' },\n                '\\u65E0\\u6570\\u636E'\n              ) : _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                  'div',\n                  { id: 'table-header' },\n                  _react2.default.createElement(\n                    FormItem,\n                    null,\n                    _react2.default.createElement(\n                      _select2.default,\n                      { value: this.state.endpointsLimit, style: { width: 80, position: 'relative', top: -1 }, onChange: this.queryEndpoints },\n                      _react2.default.createElement(\n                        Option,\n                        { value: '50' },\n                        'Limit50'\n                      ),\n                      _react2.default.createElement(\n                        Option,\n                        { value: '100' },\n                        'Limit100'\n                      ),\n                      _react2.default.createElement(\n                        Option,\n                        { value: '500' },\n                        'Limit500'\n                      )\n                    )\n                  ),\n                  _react2.default.createElement(\n                    FormItem,\n                    { className: 'check' },\n                    _react2.default.createElement(_input2.default, {\n                      style: { width: 200 },\n                      placeholder: '\\u8BF7\\u8F93\\u5165\\u8FC7\\u6EE4\\u4FE1\\u606F',\n                      suffix: _react2.default.createElement(_icon2.default, { type: 'filter' }),\n                      value: this.state.searchEndpointsText,\n                      onChange: this.onInputEndpointChange\n                    })\n                  )\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { id: 'endpoints-results' },\n                  _react2.default.createElement(_table2.default, {\n                    className: 'narrow-rows',\n                    rowKey: function rowKey(record) {\n                      return record.id;\n                    },\n                    rowSelection: rowEndpointSelection,\n                    columns: endpointsColumns,\n                    dataSource: endpoints.filter(function (item) {\n                      var str = _this2.state.searchEndpointsText;\n                      try {\n                        var reg = new RegExp(str, 'gi');\n                        return item.endpoint.match(reg);\n                      } catch (e) {\n                        return true;\n                      }\n                    }),\n                    pagination: false\n                  })\n                )\n              )\n            )\n          )\n        ),\n        isLoading === 0 ? _react2.default.createElement(\n          'div',\n          { className: 'dashboard-searchdata-loading' },\n          _react2.default.createElement(_spin2.default, { size: 'large' })\n        ) : '',\n        _react2.default.createElement(\n          'div',\n          { className: 'counters' },\n          _react2.default.createElement(\n            'p',\n            { className: 'header' },\n            _react2.default.createElement(\n              'span',\n              { className: 'num' },\n              '2'\n            ),\n            _react2.default.createElement(\n              'span',\n              { className: 'title' },\n              '\\u641C\\u7D22Counters'\n            )\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'up' },\n            _react2.default.createElement(\n              _form2.default,\n              { onSubmit: this.queryCounters },\n              _react2.default.createElement(\n                'div',\n                { className: 'content' },\n                _react2.default.createElement(\n                  'div',\n                  null,\n                  _react2.default.createElement(\n                    FormItem,\n                    (0, _extends3.default)({}, formCounterItemLayout, { label: 'Counter' }),\n                    _react2.default.createElement(_input2.default, {\n                      id: 'txtDashBoardCounter',\n                      placeholder: '\\u53EF\\u4EE5\\u7528\\u7A7A\\u683C\\u5206\\u5272\\u591A\\u4E2A\\u641C\\u7D22\\u5173\\u952E\\u5B57',\n                      value: this.state.counter,\n                      onChange: this.changeCounter\n                    })\n                  ),\n                  _react2.default.createElement(\n                    FormItem,\n                    tailCounterFormItemLayout,\n                    _react2.default.createElement(\n                      _button2.default,\n                      { type: 'primary', htmlType: 'submit' },\n                      '\\u641C\\u7D22'\n                    )\n                  )\n                )\n              )\n            )\n          ),\n          counters.length === 0 ? _react2.default.createElement(\n            'div',\n            { className: 'down' },\n            '\\u65E0\\u6570\\u636E'\n          ) : _react2.default.createElement(\n            'div',\n            { id: 'counters-results' },\n            _react2.default.createElement(\n              _form2.default,\n              null,\n              _react2.default.createElement(\n                'div',\n                { className: 'title' },\n                _react2.default.createElement(\n                  FormItem,\n                  null,\n                  _react2.default.createElement(\n                    _select2.default,\n                    { value: this.state.countersLimit, style: { width: 80 }, onChange: this.queryCounters },\n                    _react2.default.createElement(\n                      Option,\n                      { value: '50' },\n                      'Limit50'\n                    ),\n                    _react2.default.createElement(\n                      Option,\n                      { value: '100' },\n                      'Limit100'\n                    ),\n                    _react2.default.createElement(\n                      Option,\n                      { value: '500' },\n                      'Limit500'\n                    )\n                  )\n                ),\n                _react2.default.createElement(\n                  FormItem,\n                  null,\n                  _react2.default.createElement(_input2.default, {\n                    style: { width: 140 },\n                    placeholder: '\\u8BF7\\u8F93\\u5165\\u8FC7\\u6EE4\\u4FE1\\u606F',\n                    suffix: _react2.default.createElement(_icon2.default, { type: 'filter' }),\n                    value: this.state.searchCountersText,\n                    onChange: this.onInputCounterChange\n                  })\n                ),\n                _react2.default.createElement(\n                  FormItem,\n                  { className: 'check' },\n                  _react2.default.createElement(\n                    _dropdown2.default,\n                    { overlay: menu },\n                    _react2.default.createElement(\n                      _button2.default,\n                      { type: 'default' },\n                      '\\u770B\\u56FE'\n                    )\n                  )\n                )\n              ),\n              _react2.default.createElement(_table2.default, {\n                className: 'narrow-rows',\n                rowSelection: rowCounterSelection,\n                columns: countersColumns,\n                dataSource: countersKeyData.filter(function (item) {\n                  var str = _this2.state.searchCountersText.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n                  var reg = new RegExp(str, 'gi');\n                  return item.counter.match(reg);\n                }),\n                pagination: false\n              })\n            )\n          )\n        )\n      );\n    }\n  }]);\n  return SearchData;\n}(_react2.default.PureComponent);\n\nvar mapActionCreators = {\n  getEndpoints: _index.getEndpoints,\n  getCounters: _index.getCounters,\n  getCharts: _index.getCharts,\n  saveSearchText: _index.saveSearchText,\n  getId: _index.getId\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dashboard: state.dashboard\n  };\n};\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapActionCreators)(SearchData);\n\n/***/ }),\n\n/***/ 946:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _modal = __webpack_require__(21);\n\nvar _modal2 = _interopRequireDefault(_modal);\n\nexports.resetDashboardState = resetDashboardState;\nexports.saveSearchData = saveSearchData;\nexports.saveSearchText = saveSearchText;\nexports.getEndpoints = getEndpoints;\nexports.getCounters = getCounters;\nexports.getCharts = getCharts;\nexports.getId = getId;\nexports.getChartParams = getChartParams;\nexports.default = dashboard;\n\n__webpack_require__(22);\n\nvar _immutable = __webpack_require__(173);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _utils = __webpack_require__(16);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint no-await-in-loop: 0 */\nvar RECEIVE_SUCCESS_ENDPOINTS = 'RECEIVE_SUCCESS_ENDPOINTS';\nvar RECEIVE_SUCCESS_COUNTERS = 'RECEIVE_SUCCESS_COUNTERS';\nvar RECEIVE_SUCCESS_CHARTSDATA = 'RECEIVE_SUCCESS_CHARTSDATA';\n\nvar totalResCount = 0;\nvar responseCount = 0;\n\n/*\n  isLoading分几个状态，分别对应不同的值：\n  1.请求未开始：-1\n  2.请求开始：0\n  3.响应结束：1\n*/\nvar initialState = _immutable2.default.fromJS({\n  endpoints: [],\n  counters: [],\n  searchText: { endpoint: '', tag: '', counter: '', selectedEndpointRows: [], selectedCounterRows: [] },\n  selectedEndpoints: [],\n  selectedCounters: [],\n  title: '',\n  start: '',\n  end: '',\n  cf: 'AVERAGE',\n  method: 'nosum',\n  chartsData: [],\n  isLoading: -1\n});\n\nfunction resetDashboardState() {\n  return { type: 'RESET_DASHBOARD_STATE' };\n}\n\nfunction saveSearchData(data) {\n  return {\n    type: 'SAVE_SEARCH_DATA',\n    payload: data\n  };\n}\n\nfunction saveSearchText(data) {\n  return {\n    type: 'SAVE_SEARCH_TEXT',\n    searchText: data\n  };\n}\n\nfunction receiveSuccessEndpoints(data) {\n  return {\n    type: RECEIVE_SUCCESS_ENDPOINTS,\n    payload: {\n      endpoints: data\n    }\n  };\n}\n\nfunction receiveSuccessCounters(data) {\n  return {\n    type: RECEIVE_SUCCESS_COUNTERS,\n    counters: data\n  };\n}\n\nfunction receiveSuccessChartsData(data) {\n  return {\n    type: RECEIVE_SUCCESS_CHARTSDATA,\n    chartsData: data\n  };\n}\n\nfunction getEndpoints(type, endpoint, tag, limit) {\n  // 如果没有输入有效数值，就不传这个值了，比如endpoint输入无效值，就不给endpoint传参数了\n  return function (dispatch) {\n    return (0, _utils.fetch)(type, { params: { tag: tag, query: endpoint, limit: limit } }).then(function (rsp) {\n      dispatch(receiveSuccessEndpoints(rsp));\n      if (rsp.length === 0) {\n        _modal2.default.warning({\n          title: '提示',\n          content: '响应数据是空！'\n        });\n        return false;\n      }\n    }).catch(function () {\n      _modal2.default.warning({\n        title: '提示',\n        content: 'endpoints获取失败！'\n      });\n    });\n  };\n}\n\nfunction getCounters(ids, query, limit) {\n  return function (dispatch) {\n    // 请求开始时，重置isLoading的值\n    dispatch({ type: 'START_REQUEST_COUNTERS' });\n    return (0, _utils.fetch)('getCounters', { params: { query: query, limit: limit, ids: ids } }).then(function (rsp) {\n      dispatch(receiveSuccessCounters(rsp));\n      if (rsp.length === 0) {\n        _modal2.default.warning({\n          title: '提示',\n          content: '响应数据是空！'\n        });\n        return false;\n      }\n    }).catch(function () {\n      dispatch({ type: 'RECEIVE_FAIL_COUNTERS' });\n      _modal2.default.warning({\n        title: '提示',\n        content: 'counters获取失败！'\n      });\n    });\n  };\n}\n\nfunction getCharts(consol_fun, endpoints, counters, title, startTime, endTime) {\n  totalResCount = 0;\n  responseCount = 0;\n  return function (dispatch) {\n    // 首次并发,清空接收画图数据的数组\n    dispatch({ type: 'CLEAR_DASHBOARD_VIEWS' });\n    // 请求开始时把isLoading置为0\n    dispatch({ type: 'START_REQUEST_CHARTSDATA' });\n    var results = []; // 用于存放所有响应\n    // 判断是哪个视角，计算请求总数，开始并发请求\n    if (title === 'Endpoint') {\n      totalResCount = counters.length;\n      var length = totalResCount;\n      while (length) {\n        results.push({ rsp: [] });\n        length -= 1;\n      }\n      var sortCounters = counters.sort();\n      sortCounters.forEach(function (eachCounter, index) {\n        var params = {\n          consol_fun: consol_fun,\n          counters: [eachCounter],\n          end_time: endTime,\n          hostnames: endpoints,\n          start_time: startTime\n        };\n        results[index].params = params;\n        (0, _utils.fetch)('getCharts', { body: params }).then(function (rsp) {\n          results[index].rsp = rsp;\n          dispatch(receiveSuccessChartsData(results));\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        }).catch(function () {\n          // 响应失败的情况\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        });\n      });\n    } else if (title === 'Counter') {\n      totalResCount = endpoints.length;\n      var _length = totalResCount;\n      while (_length) {\n        results.push({ rsp: [] });\n        _length -= 1;\n      }\n      var sortEndpoints = endpoints.sort();\n      sortEndpoints.forEach(function (eachEndpoint, index) {\n        var params = {\n          consol_fun: consol_fun,\n          counters: counters,\n          end_time: endTime,\n          hostnames: [eachEndpoint],\n          start_time: startTime\n        };\n        results[index].params = params;\n        (0, _utils.fetch)('getCharts', { body: params }).then(function (rsp) {\n          results[index].rsp = rsp;\n          dispatch(receiveSuccessChartsData(results));\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        }).catch(function () {\n          // 响应失败的情况\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        });\n      });\n    } else {\n      // 组合视角\n      totalResCount = 1;\n      var params = {\n        consol_fun: consol_fun,\n        counters: counters,\n        end_time: endTime,\n        hostnames: endpoints,\n        start_time: startTime\n      };\n      var postParams = JSON.stringify(params);\n      results.push({ rsp: [], params: params });\n      (0, _utils.fetch)('getCharts', postParams).then(function (rsp) {\n        results[0].rsp = rsp;\n        dispatch(receiveSuccessChartsData(results));\n        responseCount += 1;\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' });\n        }\n      }).catch(function () {\n        // 响应失败的情况\n        responseCount += 1;\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' });\n        }\n      });\n    }\n  };\n}\n// 获得id是用于在URL上设置的\nfunction getId(endpoints, counters, title, startTime, endTime, singleCounter) {\n  return function (dispatch) {\n    var params = JSON.stringify({ endpoints: endpoints, counters: counters });\n    var win = window.open('about:blank', '_blank');\n    (0, _utils.fetch)('tmpGraphAdd', { body: { endpoints: endpoints, counters: counters } }).then(function (rsp) {\n      var data = {\n        id: rsp.id,\n        endpoints: endpoints,\n        counters: counters,\n        title: title,\n        startTime: startTime,\n        endTime: endTime,\n        cf: 'AVERAGE',\n        method: 'nosum'\n      };\n      dispatch(saveSearchData(data));\n      var graph_type = 'h';\n      if (title === 'Counter') {\n        graph_type = 'k';\n      }\n      if (title === '组合') {\n        graph_type = 'a';\n      }\n      // 得到id后打开新页面\n      // const protocol = window.location.protocol\n      // const host = window.location.host\n      if (singleCounter === undefined) {\n        var _query = 'id=' + rsp.id + '&graph_type=' + graph_type + '&cf=AVERAGE&start=' + startTime + '&end=' + endTime;\n        win.location.href = '/dashboard/charts?' + _query;\n        // window.open(`${protocol}//${host}/#/dashboard/charts?${query}`, '_blank')\n        return false;\n      }\n      var query = 'id=' + rsp.id + '&graph_type=h&cf=AVERAGE&start=-3600';\n      win.location.href = '/chart?' + query;\n      // window.open(`${protocol}//${host}/#/chart?${query}`, '_blank')\n    }).catch(function () {\n      _modal2.default.warning({\n        title: '提示',\n        content: '响应失败！'\n      });\n    });\n  };\n}\n// 获得endpoints和counters去请求画图参数\nfunction getChartParams(id, graph_type, startTime, endTime, consol_fun, method) {\n  return function (dispatch) {\n    (0, _utils.fetch)('tmpGraphGet', { path: '/' + id }).then(function (rsp) {\n      // 修改method, id, searchData的值\n      var endpoints = rsp.endpoints,\n          counters = rsp.counters;\n\n      var title = 'Endpoint';\n      if (graph_type === 'k') {\n        title = 'Counter';\n      }\n      if (graph_type === 'a') {\n        title = '组合';\n      }\n      var data = {\n        id: id,\n        endpoints: endpoints,\n        counters: counters,\n        title: title,\n        startTime: startTime,\n        endTime: endTime,\n        cf: consol_fun,\n        method: method\n      };\n      dispatch(saveSearchData(data));\n      // 接下来用这个参数去请求画图数据\n      dispatch(getCharts(consol_fun, endpoints, counters, title, startTime, endTime));\n    }).catch(function () {\n      _modal2.default.warning({\n        title: '提示',\n        content: '响应失败！'\n      });\n    });\n  };\n}\nvar midReducer = function midReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n\n  switch (action.type) {\n    case 'RECEIVE_SUCCESS_ENDPOINTS':\n      return state.set('endpoints', action.payload.endpoints);\n    case 'START_REQUEST_COUNTERS':\n      return state.set('isLoading', 0);\n    case 'START_REQUEST_CHARTSDATA':\n      return state.set('isLoading', 0);\n    case 'RECEIVE_SUCCESS_COUNTERS':\n      return state.merge({\n        isLoading: 1,\n        counters: action.counters\n      });\n    case 'RECEIVE_FAIL_COUNTERS':\n      return state.set('isLoading', 1);\n    case 'SAVE_SEARCH_TEXT':\n      return state.set('searchText', action.searchText);\n    case 'SAVE_SEARCH_DATA':\n      return state.merge({\n        id: action.payload.id,\n        selectedEndpoints: action.payload.endpoints,\n        selectedCounters: action.payload.counters,\n        title: action.payload.title,\n        start: action.payload.startTime,\n        end: action.payload.endTime,\n        cf: action.payload.cf,\n        method: action.payload.method\n      });\n    case 'RECEIVE_SUCCESS_CHART_PARAMS':\n      return state.set('searchData', action.payload);\n    case 'CLEAR_DASHBOARD_VIEWS':\n      return state.set('chartsData', []);\n    case 'RECEIVE_SUCCESS_CHARTSDATA':\n      return state.set('chartsData', action.chartsData);\n    case 'FINISHED_RESPONSE':\n      return state.set('isLoading', 1);\n    default:\n      return state;\n  }\n};\n\nfunction dashboard(state, action) {\n  if (action.type === 'RESET_DASHBOARD_STATE') {\n    state = undefined;\n  }\n  return midReducer(state, action);\n}\n\n/***/ }),\n\n/***/ 949:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.27a9529f1e8ebf479d9c.js","import React, { PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { Select, Form, Input, Button, Icon, Table, Modal, Menu, Dropdown, Spin } from 'antd'\nimport moment from 'moment'\n\nimport { getEndpoints, getCounters, getCharts, saveSearchText, getId } from '../modules/index'\n\nimport './SearchData.scss'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\n\n\nclass SearchData extends React.PureComponent {\n  state = {\n    endpointInputBorderColor: '#d9d9d9',\n    endpoint: '',\n    tag: '',\n    counter: '',\n    searchEndpointsText: '',\n    searchCountersText: '',\n    selectedEndpointRowKeys: [],\n    selectedCounterRowKeys: [],\n    selectedEndpointRows: [],\n    selectedCounterRows: [],\n    endpointsLimit: '50',\n    countersLimit: '50',\n  }\n  componentDidMount() {\n    const { searchText } = this.props.dashboard.toJS()\n    const { endpoint, tag, counter, selectedEndpointRows, selectedCounterRows } = searchText\n    const selectedEndpointRowKeys = selectedEndpointRows.length === 0 ? [] : selectedEndpointRows.map(obj => obj.id)\n    const selectedCounterRowKeys = selectedCounterRows.length === 0 ? [] : selectedCounterRows.map(obj => obj.key)\n    this.setState({endpoint, tag, counter, selectedEndpointRows, selectedCounterRows, selectedEndpointRowKeys, selectedCounterRowKeys})\n  }\n\n  changeEndpoint = (e) => {\n    const endpointText = e.target.value\n    this.setState({endpoint: endpointText})\n    const str = endpointText.replace(/\\s+/g, '')\n    // 除去所有空格后字符串长度为0，说明没有输入\n    if (str.length === 0) {\n      this.setState({endpointInputBorderColor: 'red'})\n    } else {\n      this.setState({endpointInputBorderColor: '#d9d9d9'})\n    }\n  }\n\n  changeTag = (e) => {\n    this.setState({tag: e.target.value})\n  }\n\n  changeCounter = (e) => {\n    this.setState({counter: e.target.value})\n  }\n\n  onInputEndpointChange = (e) => {\n    this.setState({ searchEndpointsText: e.target.value, selectedEndpointRowKeys: [], selectedEndpointRows: [] })\n  }\n\n  onInputCounterChange = (e) => {\n    this.setState({ searchCountersText: e.target.value, selectedCounterRowKeys: [], selectedCounterRows: [] })\n  }\n\n  queryEndpoints = (e) => {\n    const { endpoint, tag } = this.state\n    if ((endpoint.replace(/[\\s]/g, '') === '') &&\n    (tag.replace(/[\\s]/g, '') === '')) {\n      Modal.warning({\n        title: '提示',\n        content: '请填写有效Endpoint或者标签！',\n      })\n      return false\n    }\n    // 去请求数据之前先把目前选中的endpoints重置\n    this.setState({ selectedEndpointRowKeys: [], selectedEndpointRows: [] })\n    if (e.type === 'submit') {\n      e.preventDefault()\n      this.props.getEndpoints('getEndpoints', endpoint, tag, this.state.endpointsLimit)\n    } else {\n      this.setState({endpointsLimit: e})\n      this.props.getEndpoints('getEndpoints', endpoint, tag, e)\n    }\n  }\n\n  queryCounters = (e) => {\n    const selectedRows = this.state.selectedEndpointRows\n    if (selectedRows.length === 0) {\n      Modal.warning({\n        title: '提示',\n        content: '请勾选要查看的endpoints',\n      })\n      return false\n    }\n    // 去请求数据之前先把目前选中的counters重置\n    this.setState({ selectedCounterRowKeys: [], selectedCounterRows: [] })\n    const endpointIds = selectedRows.map(obj => obj.id).join()\n    const { counter } = this.state\n    // 先判断是全局搜索还是切换limit\n    if (e.type === 'submit') {\n      e.preventDefault()\n      this.props.getCounters(endpointIds, counter, this.state.countersLimit)\n    } else {\n      this.setState({countersLimit: e})\n      this.props.getCounters(endpointIds, counter, e)\n    }\n  }\n\n  showCharts = (title, singleCounter) => {\n    // 获取选中的endpoints name和conuters name,把他们转化成两个数组\n    const selectedEndpointRows = this.state.selectedEndpointRows\n    const selectedCounterRows = this.state.selectedCounterRows\n    // 如果点击画图按钮，判断是否选择了endpoint和counter\n    if (selectedEndpointRows.length === 0 || (singleCounter === undefined && selectedCounterRows.length === 0)) {\n      Modal.warning({\n        title: '提示',\n        content: '请勾选要查看的endpoints和counters！',\n      })\n      return false\n    }\n    const endpoints = selectedEndpointRows.map(obj => obj.endpoint)\n    const counters = (singleCounter === undefined) ?\n    selectedCounterRows.map(obj => obj.counter) : [singleCounter]\n    const endTime = moment().unix() // 单位是秒\n    const startTime = moment().subtract(1, 'hour').unix()\n    // 把如下数据存入store中以便在其他地方使用\n    this.props.saveSearchText({\n      endpoint: this.state.endpoint,\n      tag: this.state.tag,\n      counter: this.state.counter,\n      selectedEndpointRows: this.state.selectedEndpointRows,\n      selectedCounterRows: this.state.selectedCounterRows,\n    })\n    // singleCounter不为undefined时说明点击的查看大图\n    this.props.getId(endpoints, counters, title, startTime, endTime, singleCounter)\n  }\n\n  render () {\n    const { endpoints, counters, isLoading } = this.props.dashboard.toJS()\n    const endpointsColumns = [{\n      title: 'Endpoints',\n      dataIndex: 'endpoint',\n      key: 'id',\n    }]\n    const rowEndpointSelection = {\n      selections: true,\n      selectedRowKeys: this.state.selectedEndpointRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.setState({selectedEndpointRowKeys: selectedRowKeys, selectedEndpointRows: selectedRows})\n      },\n      onSelectInvert: selectedRows => {\n        let selectedEndpointRows = selectedRows\n        if (selectedRows.length !== 0) {\n          selectedEndpointRows = selectedRows.map(item => {\n            return endpoints.filter(obj => obj.id === item)[0]\n          })\n        }\n        this.setState({ selectedEndpointRows, selectedEndpointRowKeys: selectedRows })\n      },\n    }\n    const rowCounterSelection = {\n      selections: true,\n      selectedRowKeys: this.state.selectedCounterRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.setState({selectedCounterRowKeys: selectedRowKeys, selectedCounterRows: selectedRows})\n      },\n      onSelectInvert: selectedRows => {\n        let selectedCounterRows = selectedRows\n        if (selectedRows.length !== 0) {\n          selectedCounterRows = selectedRows.map(item => {\n            return counters.filter(obj => obj.key === item)[0]\n          })\n        }\n        this.setState({ selectedCounterRows, selectedCounterRowKeys: selectedRows })\n      },\n    }\n    let count = 0\n    const countersKeyData = counters.map(obj => {\n      const newObj = obj\n      count += 1\n      newObj.key = count\n      return newObj\n    })\n    const countersColumns = [{\n      title: 'Counters',\n      dataIndex: 'counter',\n      key: 'key',\n      render: (text, record) => <a onClick={() => this.showCharts('Endpoint', record.counter)}>{text}</a>\n    }, {\n      title: '类型',\n      dataIndex: 'type',\n      width: 60,\n    }, {\n      title: '频率',\n      dataIndex: 'step',\n      width: 50,\n    }]\n    const menu = (\n      <Menu>\n        <Menu.Item>\n          <Button type=\"dashed\" onClick={() => this.showCharts('Endpoint')}>Endpoint视角</Button>\n        </Menu.Item>\n        <Menu.Item>\n          <Button type=\"dashed\" onClick={() => this.showCharts('Counter')}>Counter视角</Button>\n        </Menu.Item>\n        <Menu.Item>\n          <Button type=\"dashed\" onClick={() => this.showCharts('组合')}>组合视角</Button>\n        </Menu.Item>\n      </Menu>\n    )\n    const formEndpointItemLayout = {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 19 },\n    }\n    const formCounterItemLayout = {\n      labelCol: { span: 2 },\n      wrapperCol: { span: 21 },\n    }\n    const tailEndpointFormItemLayout = {\n      wrapperCol: {\n        sm: {\n          span: 19,\n          offset: 4,\n        },\n      },\n    }\n    const tailCounterFormItemLayout = {\n      wrapperCol: {\n        sm: {\n          span: 21,\n          offset: 2,\n        },\n      },\n    }\n    return (\n      <div id=\"dashboard-container\">\n        <div className=\"endpoints\">\n          <Form onSubmit={this.queryEndpoints}>\n            <div className=\"content\">\n              <div className=\"header\">\n                <span className=\"num\">1</span>\n                <span className=\"title\">搜索Endpoints</span>\n              </div>\n              <div className=\"up\">\n                <div>\n                  <FormItem {...formEndpointItemLayout} label=\"Endpoint\">\n                    <Input\n                      id=\"txtDashBoardEndPoint\"\n                      placeholder=\"可以用空格分割多个搜索关键字\"\n                      onChange={this.changeEndpoint}\n                      value={this.state.endpoint}\n                      style={{borderColor: this.state.endpointInputBorderColor}}/>\n                  </FormItem>\n                  <FormItem {...formEndpointItemLayout} label=\"标签\">\n                    <Input\n                      id=\"txtDashBoardTag\"\n                      placeholder=\"eg:job=appstore-web\"\n                      value={this.state.tag}\n                      onChange={this.changeTag}\n                    />\n                  </FormItem>\n                  <FormItem {...tailEndpointFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">全局搜索</Button>\n                  </FormItem>\n                </div>\n              </div>\n\n              {endpoints.length === 0 ?\n                (<div className=\"down\">\n                  无数据\n                </div>) :\n                (<div>\n                  <div id=\"table-header\">\n                    <FormItem>\n                      <Select value={this.state.endpointsLimit} style={{ width: 80, position: 'relative', top: -1 }} onChange={this.queryEndpoints}>\n                        <Option value=\"50\">Limit50</Option>\n                        <Option value=\"100\">Limit100</Option>\n                        <Option value=\"500\">Limit500</Option>\n                      </Select>\n                    </FormItem>\n                    <FormItem className=\"check\">\n                      <Input\n                        style={{ width: 200 }}\n                        placeholder=\"请输入过滤信息\"\n                        suffix={<Icon type=\"filter\" />}\n                        value={this.state.searchEndpointsText}\n                        onChange={this.onInputEndpointChange}\n                      />\n                    </FormItem>\n                  </div>\n                  <div id=\"endpoints-results\">\n                    <Table\n                      className=\"narrow-rows\"\n                      rowKey={record => record.id}\n                      rowSelection={rowEndpointSelection}\n                      columns={endpointsColumns}\n                      dataSource={\n                        endpoints.filter(item => {\n                          const str = this.state.searchEndpointsText\n                          try{\n                            const reg = new RegExp(str, 'gi')\n                            return item.endpoint.match(reg)\n                          } catch(e) {\n                            return true\n                          }\n                        })\n                      }\n                      pagination={false}\n                    />\n                  </div>\n                </div>\n                )\n              }\n            </div>\n          </Form>\n        </div>\n        {isLoading === 0 ? <div className=\"dashboard-searchdata-loading\"><Spin size=\"large\" /></div> : ''}\n        <div className=\"counters\">\n          <p className=\"header\">\n            <span className=\"num\">2</span>\n            <span className=\"title\">搜索Counters</span>\n          </p>\n          <div className=\"up\">\n            <Form onSubmit={this.queryCounters}>\n              <div className=\"content\">\n                <div>\n                  <FormItem {...formCounterItemLayout} label=\"Counter\">\n                    <Input\n                      id=\"txtDashBoardCounter\"\n                      placeholder=\"可以用空格分割多个搜索关键字\"\n                      value={this.state.counter}\n                      onChange={this.changeCounter}\n                    />\n                  </FormItem>\n                  <FormItem {...tailCounterFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">搜索</Button>\n                  </FormItem>\n                </div>\n              </div>\n            </Form>\n          </div>\n          {counters.length === 0 ?\n            (<div className=\"down\">\n              无数据\n            </div>) :\n            (<div id=\"counters-results\">\n              <Form>\n                <div className=\"title\">\n                  <FormItem>\n                    <Select value={this.state.countersLimit} style={{ width: 80 }} onChange={this.queryCounters}>\n                      <Option value=\"50\">Limit50</Option>\n                      <Option value=\"100\">Limit100</Option>\n                      <Option value=\"500\">Limit500</Option>\n                    </Select>\n                  </FormItem>\n                  <FormItem>\n                    <Input\n                      style={{ width: 140 }}\n                      placeholder=\"请输入过滤信息\"\n                      suffix={<Icon type=\"filter\" />}\n                      value={this.state.searchCountersText}\n                      onChange={this.onInputCounterChange}\n                    />\n                  </FormItem>\n                  <FormItem className=\"check\">\n                    <Dropdown overlay={menu}>\n                      <Button type=\"default\">看图</Button>\n                    </Dropdown>\n                  </FormItem>\n                </div>\n                <Table\n                  className=\"narrow-rows\"\n                  rowSelection={rowCounterSelection}\n                  columns={countersColumns}\n                  dataSource={countersKeyData.filter(item => {\n                    const str = this.state.searchCountersText.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\")\n                    const reg = new RegExp(str, 'gi')\n                    return item.counter.match(reg)\n                  })}\n                  pagination={false}\n                />\n              </Form>\n            </div>)\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapActionCreators = {\n  getEndpoints,\n  getCounters,\n  getCharts,\n  saveSearchText,\n  getId,\n}\n\nconst mapStateToProps = state => ({\n  dashboard: state.dashboard,\n})\n\nexport default connect(mapStateToProps, mapActionCreators)(SearchData)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/falcon/dashboard/components/SearchData.js","/* eslint no-await-in-loop: 0 */\nimport Immutable from 'immutable'\nimport { fetch, fetchErrModal, curTagChange } from 'base/utils.js'\nimport { Modal } from 'antd'\n\nconst RECEIVE_SUCCESS_ENDPOINTS = 'RECEIVE_SUCCESS_ENDPOINTS'\nconst RECEIVE_SUCCESS_COUNTERS = 'RECEIVE_SUCCESS_COUNTERS'\nconst RECEIVE_SUCCESS_CHARTSDATA = 'RECEIVE_SUCCESS_CHARTSDATA'\n\nlet totalResCount = 0\nlet responseCount = 0\n\n/*\n  isLoading分几个状态，分别对应不同的值：\n  1.请求未开始：-1\n  2.请求开始：0\n  3.响应结束：1\n*/\nconst initialState = Immutable.fromJS({\n  endpoints: [],\n  counters: [],\n  searchText: { endpoint: '', tag: '', counter: '', selectedEndpointRows: [], selectedCounterRows: [] },\n  selectedEndpoints: [],\n  selectedCounters: [],\n  title: '',\n  start: '',\n  end: '',\n  cf: 'AVERAGE',\n  method: 'nosum',\n  chartsData: [],\n  isLoading: -1,\n})\n\nexport function resetDashboardState() {\n  return { type: 'RESET_DASHBOARD_STATE' }\n}\n\nexport function saveSearchData(data) {\n  return {\n    type: 'SAVE_SEARCH_DATA',\n    payload: data,\n  }\n}\n\nexport function saveSearchText(data) {\n  return {\n    type: 'SAVE_SEARCH_TEXT',\n    searchText: data,\n  }\n}\n\nfunction receiveSuccessEndpoints(data) {\n  return {\n    type: RECEIVE_SUCCESS_ENDPOINTS,\n    payload: {\n      endpoints: data,\n    },\n  }\n}\n\nfunction receiveSuccessCounters(data) {\n  return {\n    type: RECEIVE_SUCCESS_COUNTERS,\n    counters: data,\n  }\n}\n\nfunction receiveSuccessChartsData(data) {\n  return {\n    type: RECEIVE_SUCCESS_CHARTSDATA,\n    chartsData: data,\n  }\n}\n\nexport function getEndpoints(type, endpoint, tag, limit) {\n  // 如果没有输入有效数值，就不传这个值了，比如endpoint输入无效值，就不给endpoint传参数了\n  return (dispatch) => {\n    return fetch(type, {params:{tag, query:endpoint, limit}})\n      .then((rsp) => {\n        dispatch(receiveSuccessEndpoints(rsp))\n        if (rsp.length === 0) {\n          Modal.warning({\n            title: '提示',\n            content: '响应数据是空！',\n          })\n          return false\n        }\n      })\n      .catch(() => {\n        Modal.warning({\n          title: '提示',\n          content: 'endpoints获取失败！',\n        })\n      })\n  }\n}\n\nexport function getCounters(ids, query, limit) {\n  return (dispatch) => {\n    // 请求开始时，重置isLoading的值\n    dispatch({ type: 'START_REQUEST_COUNTERS' })\n    return fetch('getCounters', {params:{query, limit, ids}})\n      .then((rsp) => {\n        dispatch(receiveSuccessCounters(rsp))\n        if (rsp.length === 0) {\n          Modal.warning({\n            title: '提示',\n            content: '响应数据是空！',\n          })\n          return false\n        }\n      })\n      .catch(() => {\n        dispatch({ type: 'RECEIVE_FAIL_COUNTERS' })\n        Modal.warning({\n          title: '提示',\n          content: 'counters获取失败！',\n        })\n      })\n  }\n}\n\nexport function getCharts(consol_fun, endpoints, counters, title, startTime, endTime) {\n  totalResCount = 0\n  responseCount = 0\n  return (dispatch) => {\n    // 首次并发,清空接收画图数据的数组\n    dispatch({ type: 'CLEAR_DASHBOARD_VIEWS' })\n    // 请求开始时把isLoading置为0\n    dispatch({ type: 'START_REQUEST_CHARTSDATA' })\n    const results = [] // 用于存放所有响应\n    // 判断是哪个视角，计算请求总数，开始并发请求\n    if (title === 'Endpoint') {\n      totalResCount = counters.length\n      let length = totalResCount\n      while (length) {\n        results.push({ rsp: [] })\n        length -= 1\n      }\n      const sortCounters = counters.sort()\n      sortCounters.forEach((eachCounter, index) => {\n        const params = {\n          consol_fun,\n          counters: [eachCounter],\n          end_time: endTime,\n          hostnames: endpoints,\n          start_time: startTime,\n        }\n        results[index].params = params\n        fetch('getCharts', {body: params})\n        .then((rsp) => {\n          results[index].rsp = rsp\n          dispatch(receiveSuccessChartsData(results))\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n        .catch(() => {\n          // 响应失败的情况\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n      })\n    } else if (title === 'Counter') {\n      totalResCount = endpoints.length\n      let length = totalResCount\n      while (length) {\n        results.push({ rsp: [] })\n        length -= 1\n      }\n      const sortEndpoints = endpoints.sort()\n      sortEndpoints.forEach((eachEndpoint, index) => {\n        const params = {\n          consol_fun,\n          counters,\n          end_time: endTime,\n          hostnames: [eachEndpoint],\n          start_time: startTime,\n        }\n        results[index].params = params\n        fetch('getCharts', {body: params})\n        .then((rsp) => {\n          results[index].rsp = rsp\n          dispatch(receiveSuccessChartsData(results))\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n        .catch(() => {\n          // 响应失败的情况\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n      })\n    } else {\n      // 组合视角\n      totalResCount = 1\n      const params = {\n        consol_fun,\n        counters,\n        end_time: endTime,\n        hostnames: endpoints,\n        start_time: startTime,\n      }\n      const postParams = JSON.stringify(params)\n      results.push({ rsp: [], params })\n      fetch('getCharts', postParams)\n      .then((rsp) => {\n        results[0].rsp = rsp\n        dispatch(receiveSuccessChartsData(results))\n        responseCount += 1\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' })\n        }\n      })\n      .catch(() => {\n        // 响应失败的情况\n        responseCount += 1\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' })\n        }\n      })\n    }\n  }\n}\n// 获得id是用于在URL上设置的\nexport function getId(endpoints, counters, title, startTime, endTime, singleCounter) {\n  return (dispatch) => {\n    const params = JSON.stringify({ endpoints, counters })\n    const win = window.open('about:blank', '_blank')\n    fetch('tmpGraphAdd', {body:{endpoints, counters}}).then((rsp) => {\n      const data = {\n        id: rsp.id,\n        endpoints,\n        counters,\n        title,\n        startTime,\n        endTime,\n        cf: 'AVERAGE',\n        method: 'nosum',\n      }\n      dispatch(saveSearchData(data))\n      let graph_type = 'h'\n      if (title === 'Counter') {\n        graph_type = 'k'\n      }\n      if (title === '组合') {\n        graph_type = 'a'\n      }\n      // 得到id后打开新页面\n      // const protocol = window.location.protocol\n      // const host = window.location.host\n      if (singleCounter === undefined) {\n        const query = `id=${rsp.id}&graph_type=${graph_type}&cf=AVERAGE&start=${startTime}&end=${endTime}`\n        win.location.href = `/dashboard/charts?${query}`\n        // window.open(`${protocol}//${host}/#/dashboard/charts?${query}`, '_blank')\n        return false\n      }\n      const query = `id=${rsp.id}&graph_type=h&cf=AVERAGE&start=-3600`\n      win.location.href = `/chart?${query}`\n      // window.open(`${protocol}//${host}/#/chart?${query}`, '_blank')\n    })\n    .catch(() => {\n      Modal.warning({\n        title: '提示',\n        content: '响应失败！',\n      })\n    })\n  }\n}\n// 获得endpoints和counters去请求画图参数\nexport function getChartParams(id, graph_type, startTime, endTime, consol_fun, method) {\n  return (dispatch) => {\n    fetch('tmpGraphGet', {path:`/${id}`}).then((rsp) => {\n      // 修改method, id, searchData的值\n      const { endpoints, counters } = rsp\n      let title = 'Endpoint'\n      if (graph_type === 'k') {\n        title = 'Counter'\n      }\n      if (graph_type === 'a') {\n        title = '组合'\n      }\n      const data = {\n        id,\n        endpoints,\n        counters,\n        title,\n        startTime,\n        endTime,\n        cf: consol_fun,\n        method,\n      }\n      dispatch(saveSearchData(data))\n      // 接下来用这个参数去请求画图数据\n      dispatch(getCharts(consol_fun, endpoints, counters, title, startTime, endTime))\n    })\n    .catch(() => {\n      Modal.warning({\n        title: '提示',\n        content: '响应失败！',\n      })\n    })\n  }\n}\nconst midReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'RECEIVE_SUCCESS_ENDPOINTS':\n      return state.set('endpoints', action.payload.endpoints)\n    case 'START_REQUEST_COUNTERS':\n      return state.set('isLoading', 0)\n    case 'START_REQUEST_CHARTSDATA':\n      return state.set('isLoading', 0)\n    case 'RECEIVE_SUCCESS_COUNTERS':\n      return state.merge({\n        isLoading: 1,\n        counters: action.counters,\n      })\n    case 'RECEIVE_FAIL_COUNTERS':\n      return state.set('isLoading', 1)\n    case 'SAVE_SEARCH_TEXT':\n      return state.set('searchText', action.searchText)\n    case 'SAVE_SEARCH_DATA':\n      return state.merge({\n        id: action.payload.id,\n        selectedEndpoints: action.payload.endpoints,\n        selectedCounters: action.payload.counters,\n        title: action.payload.title,\n        start: action.payload.startTime,\n        end: action.payload.endTime,\n        cf: action.payload.cf,\n        method: action.payload.method,\n      })\n    case 'RECEIVE_SUCCESS_CHART_PARAMS':\n      return state.set('searchData', action.payload)\n    case 'CLEAR_DASHBOARD_VIEWS':\n      return state.set('chartsData', [])\n    case 'RECEIVE_SUCCESS_CHARTSDATA':\n      return state.set('chartsData', action.chartsData)\n    case 'FINISHED_RESPONSE':\n      return state.set('isLoading', 1)\n    default:\n      return state\n  }\n}\n\nexport default function dashboard(state, action) {\n  if (action.type === 'RESET_DASHBOARD_STATE') {\n    state = undefined\n  }\n  return midReducer(state, action)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/falcon/dashboard/modules/index.js"],"sourceRoot":""}