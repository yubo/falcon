{"version":3,"sources":["webpack:///2.3ff86763bdaac636d934.js","webpack:///./src/routes/falcon/dashboard/modules/index.js?52e6*","webpack:///./src/routes/falcon/dashboard/components/Dashboard.js"],"names":["webpackJsonp","946","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","resetDashboardState","type","saveSearchData","data","payload","saveSearchText","searchText","receiveSuccessEndpoints","RECEIVE_SUCCESS_ENDPOINTS","endpoints","receiveSuccessCounters","RECEIVE_SUCCESS_COUNTERS","counters","receiveSuccessChartsData","RECEIVE_SUCCESS_CHARTSDATA","chartsData","getEndpoints","endpoint","tag","limit","dispatch","_utils","fetch","params","query","then","rsp","length","_modal2","warning","title","content","catch","getCounters","ids","getCharts","consol_fun","startTime","endTime","totalResCount","responseCount","results","push","sort","forEach","eachCounter","index","end_time","hostnames","start_time","body","sortEndpoints","eachEndpoint","postParams","JSON","stringify","getId","singleCounter","win","window","open","id","cf","method","graph_type","undefined","location","href","getChartParams","path","dashboard","state","action","midReducer","Object","defineProperty","value","_modal","_immutable","_immutable2","initialState","fromJS","counter","selectedEndpointRows","selectedCounterRows","selectedEndpoints","selectedCounters","start","end","isLoading","arguments","set","merge","948","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_react","_react2","Dashboard","_React$PureComponent","this","__proto__","getPrototypeOf","apply","key","createElement","props","children","PureComponent"],"mappings":"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","file":"2.3ff86763bdaac636d934.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 946:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _modal = __webpack_require__(21);\n\nvar _modal2 = _interopRequireDefault(_modal);\n\nexports.resetDashboardState = resetDashboardState;\nexports.saveSearchData = saveSearchData;\nexports.saveSearchText = saveSearchText;\nexports.getEndpoints = getEndpoints;\nexports.getCounters = getCounters;\nexports.getCharts = getCharts;\nexports.getId = getId;\nexports.getChartParams = getChartParams;\nexports.default = dashboard;\n\n__webpack_require__(22);\n\nvar _immutable = __webpack_require__(173);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _utils = __webpack_require__(16);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint no-await-in-loop: 0 */\nvar RECEIVE_SUCCESS_ENDPOINTS = 'RECEIVE_SUCCESS_ENDPOINTS';\nvar RECEIVE_SUCCESS_COUNTERS = 'RECEIVE_SUCCESS_COUNTERS';\nvar RECEIVE_SUCCESS_CHARTSDATA = 'RECEIVE_SUCCESS_CHARTSDATA';\n\nvar totalResCount = 0;\nvar responseCount = 0;\n\n/*\n  isLoading分几个状态，分别对应不同的值：\n  1.请求未开始：-1\n  2.请求开始：0\n  3.响应结束：1\n*/\nvar initialState = _immutable2.default.fromJS({\n  endpoints: [],\n  counters: [],\n  searchText: { endpoint: '', tag: '', counter: '', selectedEndpointRows: [], selectedCounterRows: [] },\n  selectedEndpoints: [],\n  selectedCounters: [],\n  title: '',\n  start: '',\n  end: '',\n  cf: 'AVERAGE',\n  method: 'nosum',\n  chartsData: [],\n  isLoading: -1\n});\n\nfunction resetDashboardState() {\n  return { type: 'RESET_DASHBOARD_STATE' };\n}\n\nfunction saveSearchData(data) {\n  return {\n    type: 'SAVE_SEARCH_DATA',\n    payload: data\n  };\n}\n\nfunction saveSearchText(data) {\n  return {\n    type: 'SAVE_SEARCH_TEXT',\n    searchText: data\n  };\n}\n\nfunction receiveSuccessEndpoints(data) {\n  return {\n    type: RECEIVE_SUCCESS_ENDPOINTS,\n    payload: {\n      endpoints: data\n    }\n  };\n}\n\nfunction receiveSuccessCounters(data) {\n  return {\n    type: RECEIVE_SUCCESS_COUNTERS,\n    counters: data\n  };\n}\n\nfunction receiveSuccessChartsData(data) {\n  return {\n    type: RECEIVE_SUCCESS_CHARTSDATA,\n    chartsData: data\n  };\n}\n\nfunction getEndpoints(type, endpoint, tag, limit) {\n  // 如果没有输入有效数值，就不传这个值了，比如endpoint输入无效值，就不给endpoint传参数了\n  return function (dispatch) {\n    return (0, _utils.fetch)(type, { params: { tag: tag, query: endpoint, limit: limit } }).then(function (rsp) {\n      dispatch(receiveSuccessEndpoints(rsp));\n      if (rsp.length === 0) {\n        _modal2.default.warning({\n          title: '提示',\n          content: '响应数据是空！'\n        });\n        return false;\n      }\n    }).catch(function () {\n      _modal2.default.warning({\n        title: '提示',\n        content: 'endpoints获取失败！'\n      });\n    });\n  };\n}\n\nfunction getCounters(ids, query, limit) {\n  return function (dispatch) {\n    // 请求开始时，重置isLoading的值\n    dispatch({ type: 'START_REQUEST_COUNTERS' });\n    return (0, _utils.fetch)('getCounters', { params: { query: query, limit: limit, ids: ids } }).then(function (rsp) {\n      dispatch(receiveSuccessCounters(rsp));\n      if (rsp.length === 0) {\n        _modal2.default.warning({\n          title: '提示',\n          content: '响应数据是空！'\n        });\n        return false;\n      }\n    }).catch(function () {\n      dispatch({ type: 'RECEIVE_FAIL_COUNTERS' });\n      _modal2.default.warning({\n        title: '提示',\n        content: 'counters获取失败！'\n      });\n    });\n  };\n}\n\nfunction getCharts(consol_fun, endpoints, counters, title, startTime, endTime) {\n  totalResCount = 0;\n  responseCount = 0;\n  return function (dispatch) {\n    // 首次并发,清空接收画图数据的数组\n    dispatch({ type: 'CLEAR_DASHBOARD_VIEWS' });\n    // 请求开始时把isLoading置为0\n    dispatch({ type: 'START_REQUEST_CHARTSDATA' });\n    var results = []; // 用于存放所有响应\n    // 判断是哪个视角，计算请求总数，开始并发请求\n    if (title === 'Endpoint') {\n      totalResCount = counters.length;\n      var length = totalResCount;\n      while (length) {\n        results.push({ rsp: [] });\n        length -= 1;\n      }\n      var sortCounters = counters.sort();\n      sortCounters.forEach(function (eachCounter, index) {\n        var params = {\n          consol_fun: consol_fun,\n          counters: [eachCounter],\n          end_time: endTime,\n          hostnames: endpoints,\n          start_time: startTime\n        };\n        results[index].params = params;\n        (0, _utils.fetch)('getCharts', { body: params }).then(function (rsp) {\n          results[index].rsp = rsp;\n          dispatch(receiveSuccessChartsData(results));\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        }).catch(function () {\n          // 响应失败的情况\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        });\n      });\n    } else if (title === 'Counter') {\n      totalResCount = endpoints.length;\n      var _length = totalResCount;\n      while (_length) {\n        results.push({ rsp: [] });\n        _length -= 1;\n      }\n      var sortEndpoints = endpoints.sort();\n      sortEndpoints.forEach(function (eachEndpoint, index) {\n        var params = {\n          consol_fun: consol_fun,\n          counters: counters,\n          end_time: endTime,\n          hostnames: [eachEndpoint],\n          start_time: startTime\n        };\n        results[index].params = params;\n        (0, _utils.fetch)('getCharts', { body: params }).then(function (rsp) {\n          results[index].rsp = rsp;\n          dispatch(receiveSuccessChartsData(results));\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        }).catch(function () {\n          // 响应失败的情况\n          responseCount += 1;\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' });\n          }\n        });\n      });\n    } else {\n      // 组合视角\n      totalResCount = 1;\n      var params = {\n        consol_fun: consol_fun,\n        counters: counters,\n        end_time: endTime,\n        hostnames: endpoints,\n        start_time: startTime\n      };\n      var postParams = JSON.stringify(params);\n      results.push({ rsp: [], params: params });\n      (0, _utils.fetch)('getCharts', postParams).then(function (rsp) {\n        results[0].rsp = rsp;\n        dispatch(receiveSuccessChartsData(results));\n        responseCount += 1;\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' });\n        }\n      }).catch(function () {\n        // 响应失败的情况\n        responseCount += 1;\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' });\n        }\n      });\n    }\n  };\n}\n// 获得id是用于在URL上设置的\nfunction getId(endpoints, counters, title, startTime, endTime, singleCounter) {\n  return function (dispatch) {\n    var params = JSON.stringify({ endpoints: endpoints, counters: counters });\n    var win = window.open('about:blank', '_blank');\n    (0, _utils.fetch)('tmpGraphAdd', { body: { endpoints: endpoints, counters: counters } }).then(function (rsp) {\n      var data = {\n        id: rsp.id,\n        endpoints: endpoints,\n        counters: counters,\n        title: title,\n        startTime: startTime,\n        endTime: endTime,\n        cf: 'AVERAGE',\n        method: 'nosum'\n      };\n      dispatch(saveSearchData(data));\n      var graph_type = 'h';\n      if (title === 'Counter') {\n        graph_type = 'k';\n      }\n      if (title === '组合') {\n        graph_type = 'a';\n      }\n      // 得到id后打开新页面\n      // const protocol = window.location.protocol\n      // const host = window.location.host\n      if (singleCounter === undefined) {\n        var _query = 'id=' + rsp.id + '&graph_type=' + graph_type + '&cf=AVERAGE&start=' + startTime + '&end=' + endTime;\n        win.location.href = '/dashboard/charts?' + _query;\n        // window.open(`${protocol}//${host}/#/dashboard/charts?${query}`, '_blank')\n        return false;\n      }\n      var query = 'id=' + rsp.id + '&graph_type=h&cf=AVERAGE&start=-3600';\n      win.location.href = '/chart?' + query;\n      // window.open(`${protocol}//${host}/#/chart?${query}`, '_blank')\n    }).catch(function () {\n      _modal2.default.warning({\n        title: '提示',\n        content: '响应失败！'\n      });\n    });\n  };\n}\n// 获得endpoints和counters去请求画图参数\nfunction getChartParams(id, graph_type, startTime, endTime, consol_fun, method) {\n  return function (dispatch) {\n    (0, _utils.fetch)('tmpGraphGet', { path: '/' + id }).then(function (rsp) {\n      // 修改method, id, searchData的值\n      var endpoints = rsp.endpoints,\n          counters = rsp.counters;\n\n      var title = 'Endpoint';\n      if (graph_type === 'k') {\n        title = 'Counter';\n      }\n      if (graph_type === 'a') {\n        title = '组合';\n      }\n      var data = {\n        id: id,\n        endpoints: endpoints,\n        counters: counters,\n        title: title,\n        startTime: startTime,\n        endTime: endTime,\n        cf: consol_fun,\n        method: method\n      };\n      dispatch(saveSearchData(data));\n      // 接下来用这个参数去请求画图数据\n      dispatch(getCharts(consol_fun, endpoints, counters, title, startTime, endTime));\n    }).catch(function () {\n      _modal2.default.warning({\n        title: '提示',\n        content: '响应失败！'\n      });\n    });\n  };\n}\nvar midReducer = function midReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments[1];\n\n  switch (action.type) {\n    case 'RECEIVE_SUCCESS_ENDPOINTS':\n      return state.set('endpoints', action.payload.endpoints);\n    case 'START_REQUEST_COUNTERS':\n      return state.set('isLoading', 0);\n    case 'START_REQUEST_CHARTSDATA':\n      return state.set('isLoading', 0);\n    case 'RECEIVE_SUCCESS_COUNTERS':\n      return state.merge({\n        isLoading: 1,\n        counters: action.counters\n      });\n    case 'RECEIVE_FAIL_COUNTERS':\n      return state.set('isLoading', 1);\n    case 'SAVE_SEARCH_TEXT':\n      return state.set('searchText', action.searchText);\n    case 'SAVE_SEARCH_DATA':\n      return state.merge({\n        id: action.payload.id,\n        selectedEndpoints: action.payload.endpoints,\n        selectedCounters: action.payload.counters,\n        title: action.payload.title,\n        start: action.payload.startTime,\n        end: action.payload.endTime,\n        cf: action.payload.cf,\n        method: action.payload.method\n      });\n    case 'RECEIVE_SUCCESS_CHART_PARAMS':\n      return state.set('searchData', action.payload);\n    case 'CLEAR_DASHBOARD_VIEWS':\n      return state.set('chartsData', []);\n    case 'RECEIVE_SUCCESS_CHARTSDATA':\n      return state.set('chartsData', action.chartsData);\n    case 'FINISHED_RESPONSE':\n      return state.set('isLoading', 1);\n    default:\n      return state;\n  }\n};\n\nfunction dashboard(state, action) {\n  if (action.type === 'RESET_DASHBOARD_STATE') {\n    state = undefined;\n  }\n  return midReducer(state, action);\n}\n\n/***/ }),\n\n/***/ 948:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(7);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(5);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(4);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Dashboard = function (_React$PureComponent) {\n  (0, _inherits3.default)(Dashboard, _React$PureComponent);\n\n  function Dashboard() {\n    (0, _classCallCheck3.default)(this, Dashboard);\n    return (0, _possibleConstructorReturn3.default)(this, (Dashboard.__proto__ || Object.getPrototypeOf(Dashboard)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(Dashboard, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        null,\n        this.props.children\n      );\n    }\n  }]);\n  return Dashboard;\n}(_react2.default.PureComponent);\n\nexports.default = Dashboard;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.3ff86763bdaac636d934.js","/* eslint no-await-in-loop: 0 */\nimport Immutable from 'immutable'\nimport { fetch, fetchErrModal, curTagChange } from 'base/utils.js'\nimport { Modal } from 'antd'\n\nconst RECEIVE_SUCCESS_ENDPOINTS = 'RECEIVE_SUCCESS_ENDPOINTS'\nconst RECEIVE_SUCCESS_COUNTERS = 'RECEIVE_SUCCESS_COUNTERS'\nconst RECEIVE_SUCCESS_CHARTSDATA = 'RECEIVE_SUCCESS_CHARTSDATA'\n\nlet totalResCount = 0\nlet responseCount = 0\n\n/*\n  isLoading分几个状态，分别对应不同的值：\n  1.请求未开始：-1\n  2.请求开始：0\n  3.响应结束：1\n*/\nconst initialState = Immutable.fromJS({\n  endpoints: [],\n  counters: [],\n  searchText: { endpoint: '', tag: '', counter: '', selectedEndpointRows: [], selectedCounterRows: [] },\n  selectedEndpoints: [],\n  selectedCounters: [],\n  title: '',\n  start: '',\n  end: '',\n  cf: 'AVERAGE',\n  method: 'nosum',\n  chartsData: [],\n  isLoading: -1,\n})\n\nexport function resetDashboardState() {\n  return { type: 'RESET_DASHBOARD_STATE' }\n}\n\nexport function saveSearchData(data) {\n  return {\n    type: 'SAVE_SEARCH_DATA',\n    payload: data,\n  }\n}\n\nexport function saveSearchText(data) {\n  return {\n    type: 'SAVE_SEARCH_TEXT',\n    searchText: data,\n  }\n}\n\nfunction receiveSuccessEndpoints(data) {\n  return {\n    type: RECEIVE_SUCCESS_ENDPOINTS,\n    payload: {\n      endpoints: data,\n    },\n  }\n}\n\nfunction receiveSuccessCounters(data) {\n  return {\n    type: RECEIVE_SUCCESS_COUNTERS,\n    counters: data,\n  }\n}\n\nfunction receiveSuccessChartsData(data) {\n  return {\n    type: RECEIVE_SUCCESS_CHARTSDATA,\n    chartsData: data,\n  }\n}\n\nexport function getEndpoints(type, endpoint, tag, limit) {\n  // 如果没有输入有效数值，就不传这个值了，比如endpoint输入无效值，就不给endpoint传参数了\n  return (dispatch) => {\n    return fetch(type, {params:{tag, query:endpoint, limit}})\n      .then((rsp) => {\n        dispatch(receiveSuccessEndpoints(rsp))\n        if (rsp.length === 0) {\n          Modal.warning({\n            title: '提示',\n            content: '响应数据是空！',\n          })\n          return false\n        }\n      })\n      .catch(() => {\n        Modal.warning({\n          title: '提示',\n          content: 'endpoints获取失败！',\n        })\n      })\n  }\n}\n\nexport function getCounters(ids, query, limit) {\n  return (dispatch) => {\n    // 请求开始时，重置isLoading的值\n    dispatch({ type: 'START_REQUEST_COUNTERS' })\n    return fetch('getCounters', {params:{query, limit, ids}})\n      .then((rsp) => {\n        dispatch(receiveSuccessCounters(rsp))\n        if (rsp.length === 0) {\n          Modal.warning({\n            title: '提示',\n            content: '响应数据是空！',\n          })\n          return false\n        }\n      })\n      .catch(() => {\n        dispatch({ type: 'RECEIVE_FAIL_COUNTERS' })\n        Modal.warning({\n          title: '提示',\n          content: 'counters获取失败！',\n        })\n      })\n  }\n}\n\nexport function getCharts(consol_fun, endpoints, counters, title, startTime, endTime) {\n  totalResCount = 0\n  responseCount = 0\n  return (dispatch) => {\n    // 首次并发,清空接收画图数据的数组\n    dispatch({ type: 'CLEAR_DASHBOARD_VIEWS' })\n    // 请求开始时把isLoading置为0\n    dispatch({ type: 'START_REQUEST_CHARTSDATA' })\n    const results = [] // 用于存放所有响应\n    // 判断是哪个视角，计算请求总数，开始并发请求\n    if (title === 'Endpoint') {\n      totalResCount = counters.length\n      let length = totalResCount\n      while (length) {\n        results.push({ rsp: [] })\n        length -= 1\n      }\n      const sortCounters = counters.sort()\n      sortCounters.forEach((eachCounter, index) => {\n        const params = {\n          consol_fun,\n          counters: [eachCounter],\n          end_time: endTime,\n          hostnames: endpoints,\n          start_time: startTime,\n        }\n        results[index].params = params\n        fetch('getCharts', {body: params})\n        .then((rsp) => {\n          results[index].rsp = rsp\n          dispatch(receiveSuccessChartsData(results))\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n        .catch(() => {\n          // 响应失败的情况\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n      })\n    } else if (title === 'Counter') {\n      totalResCount = endpoints.length\n      let length = totalResCount\n      while (length) {\n        results.push({ rsp: [] })\n        length -= 1\n      }\n      const sortEndpoints = endpoints.sort()\n      sortEndpoints.forEach((eachEndpoint, index) => {\n        const params = {\n          consol_fun,\n          counters,\n          end_time: endTime,\n          hostnames: [eachEndpoint],\n          start_time: startTime,\n        }\n        results[index].params = params\n        fetch('getCharts', {body: params})\n        .then((rsp) => {\n          results[index].rsp = rsp\n          dispatch(receiveSuccessChartsData(results))\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n        .catch(() => {\n          // 响应失败的情况\n          responseCount += 1\n          if (totalResCount === responseCount) {\n            dispatch({ type: 'FINISHED_RESPONSE' })\n          }\n        })\n      })\n    } else {\n      // 组合视角\n      totalResCount = 1\n      const params = {\n        consol_fun,\n        counters,\n        end_time: endTime,\n        hostnames: endpoints,\n        start_time: startTime,\n      }\n      const postParams = JSON.stringify(params)\n      results.push({ rsp: [], params })\n      fetch('getCharts', postParams)\n      .then((rsp) => {\n        results[0].rsp = rsp\n        dispatch(receiveSuccessChartsData(results))\n        responseCount += 1\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' })\n        }\n      })\n      .catch(() => {\n        // 响应失败的情况\n        responseCount += 1\n        if (totalResCount === responseCount) {\n          dispatch({ type: 'FINISHED_RESPONSE' })\n        }\n      })\n    }\n  }\n}\n// 获得id是用于在URL上设置的\nexport function getId(endpoints, counters, title, startTime, endTime, singleCounter) {\n  return (dispatch) => {\n    const params = JSON.stringify({ endpoints, counters })\n    const win = window.open('about:blank', '_blank')\n    fetch('tmpGraphAdd', {body:{endpoints, counters}}).then((rsp) => {\n      const data = {\n        id: rsp.id,\n        endpoints,\n        counters,\n        title,\n        startTime,\n        endTime,\n        cf: 'AVERAGE',\n        method: 'nosum',\n      }\n      dispatch(saveSearchData(data))\n      let graph_type = 'h'\n      if (title === 'Counter') {\n        graph_type = 'k'\n      }\n      if (title === '组合') {\n        graph_type = 'a'\n      }\n      // 得到id后打开新页面\n      // const protocol = window.location.protocol\n      // const host = window.location.host\n      if (singleCounter === undefined) {\n        const query = `id=${rsp.id}&graph_type=${graph_type}&cf=AVERAGE&start=${startTime}&end=${endTime}`\n        win.location.href = `/dashboard/charts?${query}`\n        // window.open(`${protocol}//${host}/#/dashboard/charts?${query}`, '_blank')\n        return false\n      }\n      const query = `id=${rsp.id}&graph_type=h&cf=AVERAGE&start=-3600`\n      win.location.href = `/chart?${query}`\n      // window.open(`${protocol}//${host}/#/chart?${query}`, '_blank')\n    })\n    .catch(() => {\n      Modal.warning({\n        title: '提示',\n        content: '响应失败！',\n      })\n    })\n  }\n}\n// 获得endpoints和counters去请求画图参数\nexport function getChartParams(id, graph_type, startTime, endTime, consol_fun, method) {\n  return (dispatch) => {\n    fetch('tmpGraphGet', {path:`/${id}`}).then((rsp) => {\n      // 修改method, id, searchData的值\n      const { endpoints, counters } = rsp\n      let title = 'Endpoint'\n      if (graph_type === 'k') {\n        title = 'Counter'\n      }\n      if (graph_type === 'a') {\n        title = '组合'\n      }\n      const data = {\n        id,\n        endpoints,\n        counters,\n        title,\n        startTime,\n        endTime,\n        cf: consol_fun,\n        method,\n      }\n      dispatch(saveSearchData(data))\n      // 接下来用这个参数去请求画图数据\n      dispatch(getCharts(consol_fun, endpoints, counters, title, startTime, endTime))\n    })\n    .catch(() => {\n      Modal.warning({\n        title: '提示',\n        content: '响应失败！',\n      })\n    })\n  }\n}\nconst midReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'RECEIVE_SUCCESS_ENDPOINTS':\n      return state.set('endpoints', action.payload.endpoints)\n    case 'START_REQUEST_COUNTERS':\n      return state.set('isLoading', 0)\n    case 'START_REQUEST_CHARTSDATA':\n      return state.set('isLoading', 0)\n    case 'RECEIVE_SUCCESS_COUNTERS':\n      return state.merge({\n        isLoading: 1,\n        counters: action.counters,\n      })\n    case 'RECEIVE_FAIL_COUNTERS':\n      return state.set('isLoading', 1)\n    case 'SAVE_SEARCH_TEXT':\n      return state.set('searchText', action.searchText)\n    case 'SAVE_SEARCH_DATA':\n      return state.merge({\n        id: action.payload.id,\n        selectedEndpoints: action.payload.endpoints,\n        selectedCounters: action.payload.counters,\n        title: action.payload.title,\n        start: action.payload.startTime,\n        end: action.payload.endTime,\n        cf: action.payload.cf,\n        method: action.payload.method,\n      })\n    case 'RECEIVE_SUCCESS_CHART_PARAMS':\n      return state.set('searchData', action.payload)\n    case 'CLEAR_DASHBOARD_VIEWS':\n      return state.set('chartsData', [])\n    case 'RECEIVE_SUCCESS_CHARTSDATA':\n      return state.set('chartsData', action.chartsData)\n    case 'FINISHED_RESPONSE':\n      return state.set('isLoading', 1)\n    default:\n      return state\n  }\n}\n\nexport default function dashboard(state, action) {\n  if (action.type === 'RESET_DASHBOARD_STATE') {\n    state = undefined\n  }\n  return midReducer(state, action)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/falcon/dashboard/modules/index.js","import React from 'react'\n\nclass Dashboard extends React.PureComponent {\n  render() {\n    return (\n      <div>\n        { this.props.children }\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/falcon/dashboard/components/Dashboard.js"],"sourceRoot":""}