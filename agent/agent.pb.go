// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent/agent.proto

/*
Package agent is a generated protocol buffer package.

It is generated from these files:
	agent/agent.proto

It has these top-level messages:
	Item
	PutRequest
	PutResponse
	Empty
	Stats
	StatsName
*/
package agent

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Item struct {
	Metric    []byte  `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Tags      []byte  `protobuf:"bytes,2,opt,name=tags,proto3" json:"tags,omitempty"`
	Type      []byte  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Value     float64 `protobuf:"fixed64,4,opt,name=value" json:"value,omitempty"`
	Timestamp int64   `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Item) GetMetric() []byte {
	if m != nil {
		return m.Metric
	}
	return nil
}

func (m *Item) GetTags() []byte {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Item) GetType() []byte {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Item) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Item) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type PutRequest struct {
	Items []*Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PutRequest) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type PutResponse struct {
	N int32 `protobuf:"varint,1,opt,name=n" json:"n,omitempty"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PutResponse) GetN() int32 {
	if m != nil {
		return m.N
	}
	return 0
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Stats struct {
	Counter []uint64 `protobuf:"varint,1,rep,packed,name=counter" json:"counter,omitempty"`
}

func (m *Stats) Reset()                    { *m = Stats{} }
func (m *Stats) String() string            { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()               {}
func (*Stats) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Stats) GetCounter() []uint64 {
	if m != nil {
		return m.Counter
	}
	return nil
}

type StatsName struct {
	CounterName [][]byte `protobuf:"bytes,1,rep,name=counterName,proto3" json:"counterName,omitempty"`
}

func (m *StatsName) Reset()                    { *m = StatsName{} }
func (m *StatsName) String() string            { return proto.CompactTextString(m) }
func (*StatsName) ProtoMessage()               {}
func (*StatsName) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *StatsName) GetCounterName() [][]byte {
	if m != nil {
		return m.CounterName
	}
	return nil
}

func init() {
	proto.RegisterType((*Item)(nil), "agent.Item")
	proto.RegisterType((*PutRequest)(nil), "agent.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "agent.PutResponse")
	proto.RegisterType((*Empty)(nil), "agent.Empty")
	proto.RegisterType((*Stats)(nil), "agent.Stats")
	proto.RegisterType((*StatsName)(nil), "agent.StatsName")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Agent service

type AgentClient interface {
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	GetStats(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Stats, error)
	GetStatsName(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StatsName, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := grpc.Invoke(ctx, "/agent.Agent/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) GetStats(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Stats, error) {
	out := new(Stats)
	err := grpc.Invoke(ctx, "/agent.Agent/GetStats", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentClient) GetStatsName(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*StatsName, error) {
	out := new(StatsName)
	err := grpc.Invoke(ctx, "/agent.Agent/GetStatsName", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Agent service

type AgentServer interface {
	Put(context.Context, *PutRequest) (*PutResponse, error)
	GetStats(context.Context, *Empty) (*Stats, error)
	GetStatsName(context.Context, *Empty) (*StatsName, error)
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_GetStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/GetStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetStats(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Agent_GetStatsName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServer).GetStatsName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/agent.Agent/GetStatsName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServer).GetStatsName(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Agent_Put_Handler,
		},
		{
			MethodName: "GetStats",
			Handler:    _Agent_GetStats_Handler,
		},
		{
			MethodName: "GetStatsName",
			Handler:    _Agent_GetStatsName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent/agent.proto",
}

func init() { proto.RegisterFile("agent/agent.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x92, 0xc1, 0x8a, 0x13, 0x41,
	0x10, 0x86, 0xe9, 0x4d, 0x66, 0xd7, 0xd4, 0x8c, 0xb2, 0x5b, 0x2e, 0x32, 0xc4, 0x20, 0xb3, 0x7d,
	0x0a, 0x82, 0x19, 0x5d, 0x6f, 0x7a, 0x72, 0x41, 0xd4, 0x8b, 0x2c, 0xe3, 0xcd, 0x8b, 0x74, 0x42,
	0x39, 0x0e, 0xa4, 0xbb, 0xc7, 0x74, 0xf5, 0x42, 0x3c, 0xfa, 0x0a, 0xbe, 0x99, 0xbe, 0x82, 0x0f,
	0x22, 0xa9, 0x9e, 0x90, 0x78, 0x19, 0xe6, 0xff, 0xab, 0xfe, 0x9f, 0xaf, 0xa1, 0xe0, 0xc2, 0xb4,
	0xe4, 0xb8, 0x96, 0xef, 0xa2, 0xdf, 0x78, 0xf6, 0x98, 0x89, 0x98, 0xce, 0x5a, 0xef, 0xdb, 0x35,
	0xd5, 0xa6, 0xef, 0x6a, 0xe3, 0x9c, 0x67, 0xc3, 0x9d, 0x77, 0x21, 0x2d, 0xe9, 0x1f, 0x30, 0xfe,
	0xc0, 0x64, 0xf1, 0x11, 0x9c, 0x5a, 0xe2, 0x4d, 0xb7, 0x2a, 0x55, 0xa5, 0xe6, 0x45, 0x33, 0x28,
	0x44, 0x18, 0xb3, 0x69, 0x43, 0x79, 0x22, 0xae, 0xfc, 0x8b, 0xb7, 0xed, 0xa9, 0x1c, 0x0d, 0xde,
	0xb6, 0x27, 0xbc, 0x84, 0xec, 0xce, 0xac, 0x23, 0x95, 0xe3, 0x4a, 0xcd, 0x55, 0x93, 0x04, 0xce,
	0x60, 0xc2, 0x9d, 0xa5, 0xc0, 0xc6, 0xf6, 0x65, 0x56, 0xa9, 0xf9, 0xa8, 0x39, 0x18, 0xba, 0x06,
	0xb8, 0x8d, 0xdc, 0xd0, 0xf7, 0x48, 0x81, 0xf1, 0x0a, 0xb2, 0x8e, 0xc9, 0x86, 0x52, 0x55, 0xa3,
	0x79, 0x7e, 0x9d, 0x2f, 0xd2, 0x5b, 0x76, 0x74, 0x4d, 0x9a, 0xe8, 0xc7, 0x90, 0x4b, 0x20, 0xf4,
	0xde, 0x05, 0xc2, 0x02, 0x94, 0x13, 0xdc, 0xac, 0x51, 0x4e, 0x9f, 0x41, 0xf6, 0xd6, 0xf6, 0xbc,
	0xd5, 0x57, 0x90, 0x7d, 0x62, 0xc3, 0x01, 0x4b, 0x38, 0x5b, 0xf9, 0xe8, 0x98, 0x36, 0xd2, 0x39,
	0x6e, 0xf6, 0x52, 0x3f, 0x83, 0x89, 0xac, 0x7c, 0x34, 0x96, 0xb0, 0x82, 0x7c, 0xf0, 0x77, 0x52,
	0x56, 0x8b, 0xe6, 0xd8, 0xba, 0xfe, 0xad, 0x20, 0x7b, 0xb3, 0xa3, 0xc1, 0x1b, 0x18, 0xdd, 0x46,
	0xc6, 0x8b, 0x01, 0xee, 0x80, 0x3f, 0xc5, 0x63, 0x2b, 0x01, 0xea, 0xcb, 0x9f, 0x7f, 0xfe, 0xfe,
	0x3a, 0x79, 0xa0, 0x27, 0xf5, 0xdd, 0x8b, 0xc5, 0xf3, 0xba, 0x8f, 0xfc, 0x4a, 0x3d, 0xc5, 0xd7,
	0x70, 0xef, 0x1d, 0x71, 0x42, 0x2c, 0x86, 0x94, 0x90, 0x4f, 0xf7, 0x4a, 0x66, 0xfa, 0xa1, 0xa4,
	0xef, 0x63, 0x9e, 0xd2, 0x41, 0x02, 0xef, 0xa1, 0xd8, 0x87, 0x05, 0xfe, 0xff, 0x82, 0xf3, 0xe3,
	0x82, 0xdd, 0x5c, 0x97, 0x52, 0x82, 0x78, 0x7e, 0x54, 0xf2, 0xc5, 0x19, 0x4b, 0x37, 0x4f, 0x3e,
	0xcf, 0xda, 0x8e, 0xbf, 0xc5, 0xe5, 0x62, 0xe5, 0x6d, 0xbd, 0x8d, 0x4b, 0x5f, 0x7f, 0x35, 0xeb,
	0x95, 0x77, 0xe9, 0x88, 0x96, 0xa7, 0x72, 0x20, 0x2f, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xf4,
	0xa0, 0xdd, 0xa2, 0x5a, 0x02, 0x00, 0x00,
}
